
/*
Code generated with Faust version 2.7.0
Compilation options: wasm-ib, -scal -ftz 2
*/

function getJSONModulations() {
	return "{\"name\":\"Modulations\",\"filename\":\"Modulations\",\"version\":\"2.7.0\",\"options\":\"wasm-ib, -scal -ftz 2\",\"size\":\"1106960\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"author\":\"ER\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"envelopes.lib/author\":\"GRAME\"},{\"envelopes.lib/copyright\":\"GRAME\"},{\"envelopes.lib/license\":\"LGPL with exception\"},{\"envelopes.lib/name\":\"Faust Envelope Library\"},{\"envelopes.lib/version\":\"0.0\"},{\"filename\":\"Modulations\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"instruments.lib/author\":\"Romain Michon (rmichon@ccrma.stanford.edu)\"},{\"instruments.lib/copyright\":\"Romain Michon\"},{\"instruments.lib/licence\":\"STK-4.3\"},{\"instruments.lib/name\":\"Faust-STK Tools Library\"},{\"instruments.lib/version\":\"1.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Modulations\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"reverbs.lib/name\":\"Faust Reverb Library\"},{\"reverbs.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"Modulations\",\"items\":[{\"type\":\"hgroup\",\"label\":\"Instrument\",\"items\":[{\"type\":\"hslider\",\"label\":\"Frequency\",\"address\":\"/Modulations/Instrument/Frequency\",\"index\":\"393412\",\"meta\":[{\"acc\":\"1 1 -10 0 15\"},{\"unit\":\"Hz\"}],\"init\":\"330\",\"min\":\"100\",\"max\":\"1200\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"General Volume\",\"address\":\"/Modulations/Instrument/General_Volume\",\"index\":\"1106940\",\"meta\":[{\"acc\":\"1 1 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"1\",\"min\":\"0.75\",\"max\":\"4\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Oscillator Volume\",\"address\":\"/Modulations/Instrument/Oscillator_Volume\",\"index\":\"393736\",\"meta\":[{\"acc\":\"1 0 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Modulating Frequency\",\"address\":\"/Modulations/Instrument/Modulating_Frequency\",\"index\":\"393372\",\"meta\":[{\"acc\":\"0 0 -10 0 10\"},{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"1200\",\"min\":\"900\",\"max\":\"1700\",\"step\":\"0.1\"}]},{\"type\":\"vgroup\",\"label\":\"Modulations\",\"items\":[{\"type\":\"hslider\",\"label\":\"Play Modulation 0 (ASR Envelope)\",\"address\":\"/Modulations/Modulations/Play_Modulation_0_(ASR_Envelope)\",\"index\":\"393480\",\"meta\":[{\"acc\":\"0 0 -30 0 10\"},{\"tooltip\":\"noteOn = 1, noteOff = 0\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Play Modulation 1 (ASR Envelope)\",\"address\":\"/Modulations/Modulations/Play_Modulation_1_(ASR_Envelope)\",\"index\":\"393564\",\"meta\":[{\"acc\":\"0 0 -30 0 5\"},{\"tooltip\":\"noteOn = 1, noteOff = 0\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Play Modulation 2 (ASR Envelope)\",\"address\":\"/Modulations/Modulations/Play_Modulation_2_(ASR_Envelope)\",\"index\":\"393640\",\"meta\":[{\"acc\":\"2 1 -30 0 10\"},{\"tooltip\":\"noteOn = 1, noteOff = 0\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Play Modulation 3 (ASR Envelope)\",\"address\":\"/Modulations/Modulations/Play_Modulation_3_(ASR_Envelope)\",\"index\":\"393316\",\"meta\":[{\"acc\":\"1 0 -10 0 10\"},{\"tooltip\":\"noteOn = 1, noteOff = 0\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"}]},{\"type\":\"vgroup\",\"label\":\"Reverb\",\"items\":[{\"type\":\"hslider\",\"label\":\"Reverberation Room Size(InstrReverb)\",\"address\":\"/Modulations/Reverb/Reverberation_Room_Size(InstrReverb)\",\"index\":\"262180\",\"meta\":[{\"acc\":\"1 1 -10 0 10\"}],\"init\":\"0.5\",\"min\":\"0.05\",\"max\":\"2\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Reverberation Volume(InstrReverb)\",\"address\":\"/Modulations/Reverb/Reverberation_Volume(InstrReverb)\",\"index\":\"393748\",\"meta\":[{\"acc\":\"1 1 -10 0 10\"}],\"init\":\"0.25\",\"min\":\"0.05\",\"max\":\"1\",\"step\":\"0.01\"}]}]}]}";
}
function getBase64CodeModulations() { return "AGFzbQEAAAAB5YCAgAATYAJ/fwBgBH9/f38AYAF9AX1gAX0BfWABfwF/YAF/AX9gAn9/AX1gAX8Bf2ACf38AYAF/AGACf38AYAJ/fwBgAX8AYAJ/fwF/YAJ/fwF/YAJ9fQF9YAN/f30AYAF9AX1gAX0BfQK9gICAAAUDZW52BV9jb3NmAAIDZW52BV9leHBmAAMDZW52BV9wb3dmAA8DZW52BV9zaW5mABEDZW52BV90YW5mABIDj4CAgAAOAAEEBQYHCAkKCwwNDhAFh4CAgAABAKCAgIAAB7qBgIAADAdjb21wdXRlAAYMZ2V0TnVtSW5wdXRzAAcNZ2V0TnVtT3V0cHV0cwAIDWdldFBhcmFtVmFsdWUACQ1nZXRTYW1wbGVSYXRlAAoEaW5pdAALDWluc3RhbmNlQ2xlYXIADBFpbnN0YW5jZUNvbnN0YW50cwANDGluc3RhbmNlSW5pdAAOGmluc3RhbmNlUmVzZXRVc2VySW50ZXJmYWNlAA8Nc2V0UGFyYW1WYWx1ZQASBm1lbW9yeQIACr+bgYAADpWBgIAAAQJ/QQAhA0EAIQJBACECA0ACQEGIyMMAIAJBAnRqQQA2AgAgAkEBaiECIAJBAkgEQAwCDAELCwtBACEDA0ACQEEAQQAoAozIQ0EBajYCiMhDQQAgA0ECdGpD2w/JOEEAKAKIyENBf2qylBADOAIAQQBBACgCiMhDNgKMyEMgA0EBaiEDIANBgYAESARADAIMAQsLCwve4ICAAAIQf/QBfUEAIQRBACEFQwAAAAAhFEMAAAAAIRVDAAAAACEWQwAAAAAhF0MAAAAAIRhDAAAAACEZQwAAAAAhGkMAAAAAIRtDAAAAACEcQwAAAAAhHUMAAAAAIR5BACEGQQAhB0EAIQhDAAAAACEfQwAAAAAhIEMAAAAAISFDAAAAACEiQQAhCUEAIQpBACELQwAAAAAhI0MAAAAAISRBACEMQQAhDUEAIQ5DAAAAACElQwAAAAAhJkEAIQ9BACEQQQAhEUMAAAAAISdDAAAAACEoQwAAAAAhKUMAAAAAISpDAAAAACErQwAAAAAhLEMAAAAAIS1DAAAAACEuQwAAAAAhL0MAAAAAITBDAAAAACExQwAAAAAhMkMAAAAAITNDAAAAACE0QwAAAAAhNUMAAAAAITZDAAAAACE3QwAAAAAhOEMAAAAAITlDAAAAACE6QwAAAAAhO0MAAAAAITxDAAAAACE9QwAAAAAhPkMAAAAAIT9DAAAAACFAQwAAAAAhQUMAAAAAIUJDAAAAACFDQwAAAAAhREMAAAAAIUVDAAAAACFGQwAAAAAhR0MAAAAAIUhDAAAAACFJQwAAAAAhSkMAAAAAIUtDAAAAACFMQwAAAAAhTUMAAAAAIU5DAAAAACFPQwAAAAAhUEMAAAAAIVFDAAAAACFSQwAAAAAhU0MAAAAAIVRDAAAAACFVQwAAAAAhVkMAAAAAIVdDAAAAACFYQwAAAAAhWUMAAAAAIVpDAAAAACFbQwAAAAAhXEMAAAAAIV1DAAAAACFeQwAAAAAhX0MAAAAAIWBDAAAAACFhQwAAAAAhYkMAAAAAIWNDAAAAACFkQwAAAAAhZUMAAAAAIWZDAAAAACFnQwAAAAAhaEMAAAAAIWlBACESQwAAAAAhakMAAAAAIWtDAAAAACFsQwAAAAAhbUMAAAAAIW5DAAAAACFvQwAAAAAhcEMAAAAAIXFDAAAAACFyQwAAAAAhc0MAAAAAIXRDAAAAACF1QwAAAAAhdkMAAAAAIXdDAAAAACF4QwAAAAAheUMAAAAAIXpDAAAAACF7QQAhE0MAAAAAIXxDAAAAACF9QwAAAAAhfkMAAAAAIX9DAAAAACGAAUMAAAAAIYEBQwAAAAAhggFDAAAAACGDAUMAAAAAIYQBQwAAAAAhhQFDAAAAACGGAUMAAAAAIYcBQwAAAAAhiAFDAAAAACGJAUMAAAAAIYoBQwAAAAAhiwFDAAAAACGMAUMAAAAAIY0BQwAAAAAhjgFDAAAAACGPAUMAAAAAIZABQwAAAAAhkQFDAAAAACGSAUMAAAAAIZMBQwAAAAAhlAFDAAAAACGVAUMAAAAAIZYBQwAAAAAhlwFDAAAAACGYAUMAAAAAIZkBQwAAAAAhmgFDAAAAACGbAUMAAAAAIZwBQwAAAAAhnQFDAAAAACGeAUMAAAAAIZ8BQwAAAAAhoAFDAAAAACGhAUMAAAAAIaIBQwAAAAAhowFDAAAAACGkAUMAAAAAIaUBQwAAAAAhpgFDAAAAACGnAUMAAAAAIagBQwAAAAAhqQFDAAAAACGqAUMAAAAAIasBQwAAAAAhrAFDAAAAACGtAUMAAAAAIa4BQwAAAAAhrwFDAAAAACGwAUMAAAAAIbEBQwAAAAAhsgFDAAAAACGzAUMAAAAAIbQBQwAAAAAhtQFDAAAAACG2AUMAAAAAIbcBQwAAAAAhuAFDAAAAACG5AUMAAAAAIboBQwAAAAAhuwFDAAAAACG8AUMAAAAAIb0BQwAAAAAhvgFDAAAAACG/AUMAAAAAIcABQwAAAAAhwQFDAAAAACHCAUMAAAAAIcMBQwAAAAAhxAFDAAAAACHFAUMAAAAAIcYBQwAAAAAhxwFDAAAAACHIAUMAAAAAIckBQwAAAAAhygFDAAAAACHLAUMAAAAAIcwBQwAAAAAhzQFDAAAAACHOAUMAAAAAIc8BQwAAAAAh0AFDAAAAACHRAUMAAAAAIdIBQwAAAAAh0wFDAAAAACHUAUMAAAAAIdUBQwAAAAAh1gFDAAAAACHXAUMAAAAAIdgBQwAAAAAh2QFDAAAAACHaAUMAAAAAIdsBQwAAAAAh3AFDAAAAACHdAUMAAAAAId4BQwAAAAAh3wFDAAAAACHgAUMAAAAAIeEBQwAAAAAh4gFDAAAAACHjAUMAAAAAIeQBQwAAAAAh5QFDAAAAACHmAUMAAAAAIecBQwAAAAAh6AFDAAAAACHpAUMAAAAAIeoBQwAAAAAh6wFDAAAAACHsAUMAAAAAIe0BQwAAAAAh7gFDAAAAACHvAUMAAAAAIfABQwAAAAAh8QFDAAAAACHyAUMAAAAAIfMBQwAAAAAh9AFDAAAAACH1AUMAAAAAIfYBQwAAAAAh9wFDAAAAACH4AUMAAAAAIfkBQwAAAAAh+gFDAAAAACH7AUMAAAAAIfwBQwAAAAAh/QFDAAAAACH+AUMAAAAAIf8BQwAAAAAhgAJDAAAAACGBAkMAAAAAIYICQwAAAAAhgwJDAAAAACGEAkMAAAAAIYUCQwAAAAAhhgJDAAAAACGHAiADQQBqKAIAIQQgA0EEaigCACEFQ83MTD1DAAAAQEEAKgKkgBCWlyEUQQAqAqCAECAUlRABIRUgFUMAAABAEAIhFkMAAIA/QQAqApSAECAWlJMhF0MAAIA/IBaTIRggFyAYlSEZQwAAAAAgF0MAAABAEAIgGEMAAABAEAKVQwAAgL+Sl5EhGiAZIBqTIRsgFSAaQwAAgD8gGZOSlCEcQQAqAqiAECAUlRABIBWVQwAAgL+SIR1BACoC5IAYIR4gHkMAAAAAXiEGIAZBAEohByAeQwAAAABbQQBKIQhBACoChIEYIB6UIR9DbxKDOkEAKgKcgRiUISBDbxKDOkEAKgLEgRiUISFBACoCiIIYISIgIkMAAAAAXiEJIAlBAEohCiAiQwAAAABbQQBKIQtBACoChIEYICKUISNBACoC3IIYISQgJEMAAAAAXiEMIAxBAEohDSAkQwAAAABbQQBKIQ5BACoChIEYICSUISVBACoCqIMYISYgJkMAAAAAXiEPIA9BAEohECAmQwAAAABbQQBKIRFBACoChIEYICaUISdDbxKDOkEAKgKIhBhDAAAAQBAClCEoQ28SgzpBACoClIQYlCEpQQAqArjEGSAUlRABISogKkMAAABAEAIhK0MAAIA/QQAqApSAECArlJMhLEMAAIA/ICuTIS0gLCAtlSEuQwAAAAAgLEMAAABAEAIgLUMAAABAEAKVQwAAgL+Sl5EhLyAuIC+TITAgKiAvQwAAgD8gLpOSlCExQQAqArzEGSAUlRABICqVQwAAgL+SITJBACoC7MQiIBSVEAEhMyAzQwAAAEAQAiE0QwAAgD9BACoClIAQIDSUkyE1QwAAgD8gNJMhNiA1IDaVITdDAAAAACA1QwAAAEAQAiA2QwAAAEAQApVDAACAv5KXkSE4IDcgOJMhOSAzIDhDAACAPyA3k5KUITpBACoC8MQiIBSVEAEgM5VDAACAv5IhO0EAKgKgxScgFJUQASE8IDxDAAAAQBACIT1DAACAP0EAKgKUgBAgPZSTIT5DAACAPyA9kyE/ID4gP5UhQEMAAAAAID5DAAAAQBACID9DAAAAQBAClUMAAIC/kpeRIUEgQCBBkyFCIDwgQUMAAIA/IECTkpQhQ0EAKgKkxScgFJUQASA8lUMAAIC/kiFEQQAqAtTFMCAUlRABIUUgRUMAAABAEAIhRkMAAIA/QQAqApSAECBGlJMhR0MAAIA/IEaTIUggRyBIlSFJQwAAAAAgR0MAAABAEAIgSEMAAABAEAKVQwAAgL+Sl5EhSiBJIEqTIUsgRSBKQwAAgD8gSZOSlCFMQQAqAtjFMCAUlRABIEWVQwAAgL+SIU1BACoCiIY1IBSVEAEhTiBOQwAAAEAQAiFPQwAAgD9BACoClIAQIE+UkyFQQwAAgD8gT5MhUSBQIFGVIVJDAAAAACBQQwAAAEAQAiBRQwAAAEAQApVDAACAv5KXkSFTIFIgU5MhVCBOIFNDAACAPyBSk5KUIVVBACoCjIY1IBSVEAEgTpVDAACAv5IhVkEAKgK8hjogFJUQASFXIFdDAAAAQBACIVhDAACAP0EAKgKUgBAgWJSTIVlDAACAPyBYkyFaIFkgWpUhW0MAAAAAIFlDAAAAQBACIFpDAAAAQBAClUMAAIC/kpeRIVwgWyBckyFdIFcgXEMAAIA/IFuTkpQhXkEAKgLAhjogFJUQASBXlUMAAIC/kiFfQQAqAvCGPyAUlRABIWAgYEMAAABAEAIhYUMAAIA/QQAqApSAECBhlJMhYkMAAIA/IGGTIWMgYiBjlSFkQwAAAAAgYkMAAABAEAIgY0MAAABAEAKVQwAAgL+Sl5EhZSBkIGWTIWYgYCBlQwAAgD8gZJOSlCFnQQAqAvSGPyAUlRABIGCVQwAAgL+SIWhDbxKDOkEAKgL8x0OUIWlBACESA0ACQEEAQQE2AoSAEEEAKgK0gBBBACoCwIAQlEEAKgK4gBBBACoC9MdDQQAqAvjHQ5KUkiFqQQAgakMAAAAAIGq8QYCAgPwHcRs4AryAECAbQQAqAsiAEJQgHEEAKgL0x0MgHUEAKgK8gBCUkpSSIWtBACBrQwAAAAAga7xBgICA/AdxGzgCxIAQQdCAEEEAKALMgBBB//8BcUECdGpD8wS1PkEAKgLEgBCUQwjlPB6SOAIAQwAAAABBACoC6IAYQQAqAvCAGEMAAIA/kpYgBxshbEEAIGxDAAAAACBsvEGAgID8B3EbOALsgBhDAAAAAEEAKgL4gBhBACoCgIEYQwAAgD+SliAIGyFtQQAgbUMAAAAAIG28QYCAgPwHcRs4AvyAGCAGskMAAAAAIB9BACoC/IAYlCAeQQAqAvyAGEEAKgL4gBhdG0EAKgL8gBhDAAAAAF0blEEAKgKMgRggBhshbkEAIG5DAAAAACBuvEGAgID8B3EbOAKIgRhDd75/P0EAKgKUgRiUQxe3UTqSIW9BACBvQwAAAAAgb7xBgICA/AdxGzgCkIEYICBDd75/P0EAKgKkgRiUkiFwQQAgcEMAAAAAIHC8QYCAgPwHcRs4AqCBGEEAKgKsgRhBACoCmIEYQQAqAqCBGEMAAAAAQQAqAryBGJOUlJIhcUEAIHFDAAAAACBxvEGAgID8B3EbOAKogRhBACoCtIEYQQAqApiBGEEAKgKggRhBACoCqIEYlJSSQQFBACgCiIAQa7KSIXJBACByQwAAAAAgcrxBgICA/AdxGzgCsIEYQQAqArCBGCFzQQAgc0MAAAAAIHO8QYCAgPwHcRs4AriBGEPbD0lAQQAqAoiBGEEAKgL0gBhBACoC7IAYQwAAAABBACoCiIEYk5SUQQAqAoiBGJJDAAAAAEEAKgLsgBhBACoC6IAYXRtBACoC7IAYQwAAAABdG0EAKgKQgRiUQQAqAriBGJSUIXQgdBADIXVDAAAAACB1kyF2IHQQACF3ICFDd75/P0EAKgLMgRiUkiF4QQAgeEMAAAAAIHi8QYCAgPwHcRs4AsiBGEEAKgLUgRhBACoCwIEYQQAqAsiBGJSSIXkgeSB5jpMhekEAIHpDAAAAACB6vEGAgID8B3EbOALQgRhDAACAR0EAKgLQgRiUIXsge6ghE0EAIBNBAnRqKgIAIXwgfCB7IHuOk0EAIBNBAWpBAnRqKgIAIHyTlJIhfUEAKgKEghggdpQgdyB9lJIhfiB2QQAqAvyBGJQgdyB+lJIhfyB2QQAqAvSBGJQgdyB/lJIhgAEgdkEAKgLsgRiUIHcggAGUkiGBASB2QQAqAuSBGJQgdyCBAZSSIYIBIHZBACoC3IEYlCB3IIIBlJIhgwFBACCDAUMAAAAAIIMBvEGAgID8B3EbOALYgRggdSCCAZQgd0EAKgLcgRiUkiGEAUEAIIQBQwAAAAAghAG8QYCAgPwHcRs4AuCBGCB1IIEBlCB3QQAqAuSBGJSSIYUBQQAghQFDAAAAACCFAbxBgICA/AdxGzgC6IEYIHUggAGUIHdBACoC7IEYlJIhhgFBACCGAUMAAAAAIIYBvEGAgID8B3EbOALwgRggdSB/lCB3QQAqAvSBGJSSIYcBQQAghwFDAAAAACCHAbxBgICA/AdxGzgC+IEYIHUgfpQgd0EAKgL8gRiUkiGIAUEAIIgBQwAAAAAgiAG8QYCAgPwHcRs4AoCCGEMAAAAAQQAqAuiAGEEAKgKQghhDAACAP5KWIAobIYkBQQAgiQFDAAAAACCJAbxBgICA/AdxGzgCjIIYQwAAAABBACoC+IAYQQAqApiCGEMAAIA/kpYgCxshigFBACCKAUMAAAAAIIoBvEGAgID8B3EbOAKUghggCbJDAAAAACAjQQAqApSCGJQgIkEAKgKUghhBACoC+IAYXRtBACoClIIYQwAAAABdG5RBACoCoIIYIAkbIYsBQQAgiwFDAAAAACCLAbxBgICA/AdxGzgCnIIYQ9sPSUBBACoCnIIYQQAqAvSAGEEAKgKMghhDAAAAAEEAKgKcghiTlJRBACoCnIIYkkMAAAAAQQAqAoyCGEEAKgLogBhdG0EAKgKMghhDAAAAAF0bQQAqApCBGJQgfZSUIYwBIIwBEAMhjQFDAAAAACCNAZMhjgEgjAEQACGPAUEAKgLQghggjgGUII8BIH2UkiGQASCOAUEAKgLIghiUII8BIJABlJIhkQEgjgFBACoCwIIYlCCPASCRAZSSIZIBII4BQQAqAriCGJQgjwEgkgGUkiGTASCOAUEAKgKwghiUII8BIJMBlJIhlAEgjgFBACoCqIIYlCCPASCUAZSSIZUBQQAglQFDAAAAACCVAbxBgICA/AdxGzgCpIIYII0BIJQBlCCPAUEAKgKoghiUkiGWAUEAIJYBQwAAAAAglgG8QYCAgPwHcRs4AqyCGCCNASCTAZQgjwFBACoCsIIYlJIhlwFBACCXAUMAAAAAIJcBvEGAgID8B3EbOAK0ghggjQEgkgGUII8BQQAqAriCGJSSIZgBQQAgmAFDAAAAACCYAbxBgICA/AdxGzgCvIIYII0BIJEBlCCPAUEAKgLAghiUkiGZAUEAIJkBQwAAAAAgmQG8QYCAgPwHcRs4AsSCGCCNASCQAZQgjwFBACoCyIIYlJIhmgFBACCaAUMAAAAAIJoBvEGAgID8B3EbOALMghggjQEgfZRBACoC0IIYII8BlJJBACoCkIEYlCGbAUMAAIA/QQAqApCBGJMhnAEgnAEgfZQhnQEgmwEgnQGSIZ4BQQAgngE4AtSCGEMAAAAAQQAqAuiAGEEAKgLkghhDAACAP5KWIA0bIZ8BQQAgnwFDAAAAACCfAbxBgICA/AdxGzgC4IIYQwAAAABBACoC+IAYQQAqAuyCGEMAAIA/kpYgDhshoAFBACCgAUMAAAAAIKABvEGAgID8B3EbOALoghggDLJDAAAAACAlQQAqAuiCGJQgJEEAKgLoghhBACoC+IAYXRtBACoC6IIYQwAAAABdG5RBACoC9IIYIAwbIaEBQQAgoQFDAAAAACChAbxBgICA/AdxGzgC8IIYQ9sPyT9BACoC2IIYIJsBkiCdAZJBACoC8IIYQQAqAvSAGEEAKgLgghhDAAAAAEEAKgLwghiTlJRBACoC8IIYkkMAAAAAQQAqAuCCGEEAKgLogBhdG0EAKgLgghhDAAAAAF0blEEAKgKQgRiUlCGiASCiARADIaMBQwAAAAAgowGTIaQBIKIBEAAhpQFBACoCpIMYIKQBlCClASCeAZSSIaYBIKQBQQAqApyDGJQgpQEgpgGUkiGnASCkAUEAKgKUgxiUIKUBIKcBlJIhqAEgpAFBACoCjIMYlCClASCoAZSSIakBIKQBQQAqAoSDGJQgpQEgqQGUkiGqASCkAUEAKgL8ghiUIKUBIKoBlJIhqwFBACCrAUMAAAAAIKsBvEGAgID8B3EbOAL4ghggowEgqgGUIKUBQQAqAvyCGJSSIawBQQAgrAFDAAAAACCsAbxBgICA/AdxGzgCgIMYIKMBIKkBlCClAUEAKgKEgxiUkiGtAUEAIK0BQwAAAAAgrQG8QYCAgPwHcRs4AoiDGCCjASCoAZQgpQFBACoCjIMYlJIhrgFBACCuAUMAAAAAIK4BvEGAgID8B3EbOAKQgxggowEgpwGUIKUBQQAqApSDGJSSIa8BQQAgrwFDAAAAACCvAbxBgICA/AdxGzgCmIMYIKMBIKYBlCClAUEAKgKcgxiUkiGwAUEAILABQwAAAAAgsAG8QYCAgPwHcRs4AqCDGCCjASCeAZRBACoCpIMYIKUBlJJBACoCkIEYlCCeASCcAZSSIbEBQwAAAABBACoC6IAYQQAqArCDGEMAAIA/kpYgEBshsgFBACCyAUMAAAAAILIBvEGAgID8B3EbOAKsgxhDAAAAAEEAKgL4gBhBACoCuIMYQwAAgD+SliARGyGzAUEAILMBQwAAAAAgswG8QYCAgPwHcRs4ArSDGCAPskMAAAAAICdBACoCtIMYlCAmQQAqArSDGEEAKgL4gBhdG0EAKgK0gxhDAAAAAF0blEEAKgLAgxggDxshtAFBACC0AUMAAAAAILQBvEGAgID8B3EbOAK8gxhD2w9JQCCxAUMAAABAEAJBACoCvIMYQQAqAvSAGEEAKgKsgxhDAAAAAEEAKgK8gxiTlJRBACoCvIMYkkMAAAAAQQAqAqyDGEEAKgLogBhdG0EAKgKsgxhDAAAAAF0blEEAKgKQgRiUlCG1ASC1ARADIbYBQwAAAAAgtgGTIbcBILUBEAAhuAFBACoC8IMYILcBlCCxASC4AZSSIbkBILcBQQAqAuiDGJQguAEguQGUkiG6ASC3AUEAKgLggxiUILgBILoBlJIhuwEgtwFBACoC2IMYlCC4ASC7AZSSIbwBILcBQQAqAtCDGJQguAEgvAGUkiG9ASC3AUEAKgLIgxiUILgBIL0BlJIhvgFBACC+AUMAAAAAIL4BvEGAgID8B3EbOALEgxggtgEgvQGUILgBQQAqAsiDGJSSIb8BQQAgvwFDAAAAACC/AbxBgICA/AdxGzgCzIMYILYBILwBlCC4AUEAKgLQgxiUkiHAAUEAIMABQwAAAAAgwAG8QYCAgPwHcRs4AtSDGCC2ASC7AZQguAFBACoC2IMYlJIhwQFBACDBAUMAAAAAIMEBvEGAgID8B3EbOALcgxggtgEgugGUILgBQQAqAuCDGJSSIcIBQQAgwgFDAAAAACDCAbxBgICA/AdxGzgC5IMYILYBILkBlCC4AUEAKgLogxiUkiHDAUEAIMMBQwAAAAAgwwG8QYCAgPwHcRs4AuyDGEEAKgKEghggd5QgsQEgtgGUQQAqAvCDGCC4AZSSQQAqApCBGJQgsQEgnAGUkiB1IH2UkpIhxAFBACDEATgC9IMYQQAqAuCAGCDEAUEAKgL4gxiSlEEAKgL8gxhBACoChIQYlJIhxQFBACDFAUMAAAAAIMUBvEGAgID8B3EbOAKAhBggKEN3vn8/QQAqApCEGJSSIcYBQQAgxgFDAAAAACDGAbxBgICA/AdxGzgCjIQYQQAqAoCEGEEAKgKMhBiUIccBIClDd75/P0EAKgKchBiUkiHIAUEAIMgBQwAAAAAgyAG8QYCAgPwHcRs4ApiEGEPNzEw9QwAAgD9BACoCmIQYlpchyQFBoIQYQQAoAsyAEEH/H3FBAnRqIMcBIMkBlDgCAEPsUTg+QaCEGEEAKALMgBBBACgCoIQZa0H/H3FBAnRqKgIAlCHKAUOamRk/QQAqAqzEGZRB0IAQQQAoAsyAEEEAKALUgBhrQf//AXFBAnRqKgIAkiDKAZMhywFBpIQZQQAoAsyAEEH/D3FBAnRqIMsBOAIAQaSEGUEAKALMgBBBACgCpMQZa0H/D3FBAnRqKgIAIcwBQQAgzAFDAAAAACDMAbxBgICA/AdxGzgCqMQZQwAAAABDmpkZPyDLAZSTIc0BIM0BQwAAAAAgzQG8QYCAgPwHcRshzgFBACoCtIAQQQAqAsTEGZRBACoCuIAQQQAqAsTHQ0EAKgLIx0OSlJIhzwFBACDPAUMAAAAAIM8BvEGAgID8B3EbOALAxBkgMEEAKgLMxBmUIDFBACoCxMdDIDJBACoCwMQZlJKUkiHQAUEAINABQwAAAAAg0AG8QYCAgPwHcRs4AsjEGUHQxBlBACgCzIAQQf//AXFBAnRqQ/MEtT5BACoCyMQZlEMI5TwekjgCAEOamRk/QQAqAuDEIpRB0MQZQQAoAsyAEEEAKALUxCFrQf//AXFBAnRqKgIAkiDKAZMh0QFB2MQhQQAoAsyAEEH/H3FBAnRqINEBOAIAQdjEIUEAKALMgBBBACgC2MQia0H/H3FBAnRqKgIAIdIBQQAg0gFDAAAAACDSAbxBgICA/AdxGzgC3MQiQwAAAABDmpkZPyDRAZSTIdMBINMBQwAAAAAg0wG8QYCAgPwHcRsh1AFBACoCtIAQQQAqAvjEIpRBACoCuIAQQQAqAtzHQ0EAKgLgx0OSlJIh1QFBACDVAUMAAAAAINUBvEGAgID8B3EbOAL0xCIgOUEAKgKAxSKUIDpBACoC3MdDIDtBACoC9MQilJKUkiHWAUEAINYBQwAAAAAg1gG8QYCAgPwHcRs4AvzEIkGExSJBACgCzIAQQf//AHFBAnRqQ/MEtT5BACoC/MQilEMI5TwekjgCAEGExSJBACgCzIAQQQAoAojFJmtB//8AcUECdGoqAgAgygFDmpkZP0EAKgKUxSeUkpIh1wFBjMUmQQAoAsyAEEH/H3FBAnRqINcBOAIAQYzFJkEAKALMgBBBACgCjMUna0H/H3FBAnRqKgIAIdgBQQAg2AFDAAAAACDYAbxBgICA/AdxGzgCkMUnQwAAAABDmpkZPyDXAZSTIdkBINkBQwAAAAAg2QG8QYCAgPwHcRsh2gFBACoCtIAQQQAqAqzFJ5RBACoCuIAQQQAqAqzHQ0EAKgKwx0OSlJIh2wFBACDbAUMAAAAAINsBvEGAgID8B3EbOAKoxScgQkEAKgK0xSeUIENBACoCrMdDIERBACoCqMUnlJKUkiHcAUEAINwBQwAAAAAg3AG8QYCAgPwHcRs4ArDFJ0G4xSdBACgCzIAQQf//AXFBAnRqQ/MEtT5BACoCsMUnlEMI5TwekjgCAEG4xSdBACgCzIAQQQAoArzFL2tB//8BcUECdGoqAgAgygFDmpkZP0EAKgLIxTCUkpIh3QFBwMUvQQAoAsyAEEH/H3FBAnRqIN0BOAIAQcDFL0EAKALMgBBBACgCwMUwa0H/H3FBAnRqKgIAId4BQQAg3gFDAAAAACDeAbxBgICA/AdxGzgCxMUwQwAAAABDmpkZPyDdAZSTId8BIN8BQwAAAAAg3wG8QYCAgPwHcRsh4AFBACoCtIAQQQAqAuDFMJRBACoCuIAQQQAqAujHQ0EAKgLsx0OSlJIh4QFBACDhAUMAAAAAIOEBvEGAgID8B3EbOALcxTAgS0EAKgLoxTCUIExBACoC6MdDIE1BACoC3MUwlJKUkiHiAUEAIOIBQwAAAAAg4gG8QYCAgPwHcRs4AuTFMEHsxTBBACgCzIAQQf//AHFBAnRqQ/MEtT5BACoC5MUwlEMI5TwekjgCAEHsxTBBACgCzIAQQQAoAvDFNGtB//8AcUECdGoqAgAgygFDmpkZP0EAKgL8hTWUkpMh4wFB9MU0QQAoAsyAEEH/D3FBAnRqIOMBOAIAQfTFNEEAKALMgBBBACgC9IU1a0H/D3FBAnRqKgIAIeQBQQAg5AFDAAAAACDkAbxBgICA/AdxGzgC+IU1Q5qZGT8g4wGUIeUBIOUBQwAAAAAg5QG8QYCAgPwHcRsh5gFBACoCtIAQQQAqApSGNZRBACoCuIAQQQAqAtDHQ0EAKgLUx0OSlJIh5wFBACDnAUMAAAAAIOcBvEGAgID8B3EbOAKQhjUgVEEAKgKchjWUIFVBACoC0MdDIFZBACoCkIY1lJKUkiHoAUEAIOgBQwAAAAAg6AG8QYCAgPwHcRs4ApiGNUGghjVBACgCzIAQQf//AHFBAnRqQ/MEtT5BACoCmIY1lEMI5TwekjgCACDKAUGghjVBACgCzIAQQQAoAqSGOWtB//8AcUECdGoqAgCSQ5qZGT9BACoCsIY6lJMh6QFBqIY5QQAoAsyAEEH/H3FBAnRqIOkBOAIAQaiGOUEAKALMgBBBACgCqIY6a0H/H3FBAnRqKgIAIeoBQQAg6gFDAAAAACDqAbxBgICA/AdxGzgCrIY6Q5qZGT8g6QGUIesBIOsBQwAAAAAg6wG8QYCAgPwHcRsh7AFBACoCtIAQQQAqAsiGOpRBACoCuIAQQQAqArjHQ0EAKgK8x0OSlJIh7QFBACDtAUMAAAAAIO0BvEGAgID8B3EbOALEhjogXUEAKgLQhjqUIF5BACoCuMdDIF9BACoCxIY6lJKUkiHuAUEAIO4BQwAAAAAg7gG8QYCAgPwHcRs4AsyGOkHUhjpBACgCzIAQQf//AHFBAnRqQ/MEtT5BACoCzIY6lEMI5TwekjgCAEHUhjpBACgCzIAQQQAoAtiGPmtB//8AcUECdGoqAgAgygFDmpkZP0EAKgLkhj+UkpMh7wFB3IY+QQAoAsyAEEH/H3FBAnRqIO8BOAIAQdyGPkEAKALMgBBBACgC3IY/a0H/H3FBAnRqKgIAIfABQQAg8AFDAAAAACDwAbxBgICA/AdxGzgC4IY/Q5qZGT8g7wGUIfEBIPEBQwAAAAAg8QG8QYCAgPwHcRsh8gFBACoCsIY6QQAqAuSGP5Ih8wFBACoC/IU1IPMBkiH0AUEAKgK0gBBBACoC/IY/lEEAKgK4gBBBACoCoMdDQQAqAqTHQ5KUkiH1AUEAIPUBQwAAAAAg9QG8QYCAgPwHcRs4AviGPyBmQQAqAoSHP5QgZ0EAKgKgx0MgaEEAKgL4hj+UkpSSIfYBQQAg9gFDAAAAACD2AbxBgICA/AdxGzgCgIc/QYiHP0EAKALMgBBB//8AcUECdGpD8wS1PkEAKgKAhz+UQwjlPB6SOAIAIMoBQYiHP0EAKALMgBBBACgCjIdDa0H//wBxQQJ0aioCAJJDmpkZP0EAKgKYx0OUkyH3AUGQh8MAQQAoAsyAEEH/D3FBAnRqIPcBOAIAQZCHwwBBACgCzIAQQQAoApDHQ2tB/w9xQQJ0aioCACH4AUEAIPgBQwAAAAAg+AG8QYCAgPwHcRs4ApTHQ0OamRk/IPcBlCH5ASD5AUMAAAAAIPkBvEGAgID8B3EbIfoBQQAqAqzEGUEAKgLgxCJBACoClMUnQQAqAsjFMCD0AZKSkpIg+gGSIOwBkiDyAZIg5gGSIOABkiDaAZIg1AGSIM4BkkEAKgKYx0OSIfsBQQAg+wFDAAAAACD7AbxBgICA/AdxGzgCnMdDIPQBIPoBkiDsAZIg8gGSIOYBkkEAKgKYx0OSQQAqAqzEGUEAKgLgxCJBACoCyMUwQQAqApTFJ5KSkiDgAZIg2gGSINQBkiDOAZKTIfwBQQAg/AFDAAAAACD8AbxBgICA/AdxGzgCqMdDQQAqAuSGP0EAKgL8hTWSIf0BQQAqApTFJ0EAKgKwhjpBACoCyMUwkpIg+gGSIOwBkiDgAZIg2gGSQQAqApjHQ5JBACoCrMQZIP0BQQAqAuDEIpKSIPIBkiDmAZIg1AGSIM4BkpMh/gFBACD+AUMAAAAAIP4BvEGAgID8B3EbOAK0x0NBACoCrMQZQQAqArCGOkEAKgLgxCKSkiD6AZIg7AGSINQBkiDOAZJBACoCmMdDkkEAKgKUxScg/QFBACoCyMUwkpIg8gGSIOYBkiDgAZIg2gGSkyH/AUEAIP8BQwAAAAAg/wG8QYCAgPwHcRs4AsDHQ0EAKgKwhjpBACoC/IU1kiGAAkEAKgLgxCJBACoC5IY/QQAqAsjFMJKSIPoBkiDyAZIg4AGSINQBkkEAKgKYx0OSQQAqAqzEGUEAKgKUxScggAKSkiDsAZIg5gGSINoBkiDOAZKTIYECQQAggQJDAAAAACCBArxBgICA/AdxGzgCzMdDQQAqAqzEGUEAKgLkhj9BACoClMUnkpIg+gGSIPIBkiDaAZIgzgGSQQAqApjHQ5JBACoC4MQiQQAqAsjFMCCAApKSIOwBkiDmAZIg4AGSINQBkpMhggJBACCCAkMAAAAAIIICvEGAgID8B3EbOALYx0NBACoCrMQZQQAqAvyFNUEAKgLIxTCSkiD6AZIg5gGSIOABkiDOAZJBACoCmMdDkkEAKgLgxCIg8wFBACoClMUnkpIg7AGSIPIBkiDaAZIg1AGSkyGDAkEAIIMCQwAAAAAggwK8QYCAgPwHcRs4AuTHQ0EAKgLgxCJBACoC/IU1QQAqApTFJ5KSIPoBkiDmAZIg2gGSINQBkkEAKgKYx0OSQQAqAqzEGUEAKgLIxTAg8wGSkiDsAZIg8gGSIOABkiDOAZKTIYQCQQAghAJDAAAAACCEArxBgICA/AdxGzgC8MdDQ5qZGT8gxwFDAACAPyDJAZOUlCGFAiBpQ3e+fz9BACoChMhDlJIhhgJBACCGAkMAAAAAIIYCvEGAgID8B3EbOAKAyENDAABAP0MAAIBAQQAqAoDIQ5aXIYcCIAQgEmpDpHC9PkEAKgKox0NBACoCtMdDkpQghQKSIIcClDgCACAFIBJqIIUCQ6RwvT5BACoCqMdDQQAqArTHQ5OUkiCHApQ4AgBBAEEAKAKEgBA2AoiAEEEAQQAqAryAEDgCwIAQQQBBACoCxIAQOALIgBBBAEEAKALMgBBBAWo2AsyAEEEAQQAqAuyAGDgC8IAYQQBBACoC/IAYOAKAgRhBAEEAKgKIgRg4AoyBGEEAQQAqApCBGDgClIEYQQBBACoCoIEYOAKkgRhBAEEAKgKogRg4AqyBGEEAQQAqArCBGDgCtIEYQQBBACoCuIEYOAK8gRhBAEEAKgLIgRg4AsyBGEEAQQAqAtCBGDgC1IEYQQBBACoC2IEYOALcgRhBAEEAKgLggRg4AuSBGEEAQQAqAuiBGDgC7IEYQQBBACoC8IEYOAL0gRhBAEEAKgL4gRg4AvyBGEEAQQAqAoCCGDgChIIYQQBBACoCjIIYOAKQghhBAEEAKgKUghg4ApiCGEEAQQAqApyCGDgCoIIYQQBBACoCpIIYOAKoghhBAEEAKgKsghg4ArCCGEEAQQAqArSCGDgCuIIYQQBBACoCvIIYOALAghhBAEEAKgLEghg4AsiCGEEAQQAqAsyCGDgC0IIYQQBBACoC1IIYOALYghhBAEEAKgLgghg4AuSCGEEAQQAqAuiCGDgC7IIYQQBBACoC8IIYOAL0ghhBAEEAKgL4ghg4AvyCGEEAQQAqAoCDGDgChIMYQQBBACoCiIMYOAKMgxhBAEEAKgKQgxg4ApSDGEEAQQAqApiDGDgCnIMYQQBBACoCoIMYOAKkgxhBAEEAKgKsgxg4ArCDGEEAQQAqArSDGDgCuIMYQQBBACoCvIMYOALAgxhBAEEAKgLEgxg4AsiDGEEAQQAqAsyDGDgC0IMYQQBBACoC1IMYOALYgxhBAEEAKgLcgxg4AuCDGEEAQQAqAuSDGDgC6IMYQQBBACoC7IMYOALwgxhBAEEAKgL0gxg4AviDGEEAQQAqAoCEGDgChIQYQQBBACoCjIQYOAKQhBhBAEEAKgKYhBg4ApyEGEEAQQAqAqjEGTgCrMQZQQBBACoCwMQZOALExBlBAEEAKgLIxBk4AszEGUEAQQAqAtzEIjgC4MQiQQBBACoC9MQiOAL4xCJBAEEAKgL8xCI4AoDFIkEAQQAqApDFJzgClMUnQQBBACoCqMUnOAKsxSdBAEEAKgKwxSc4ArTFJ0EAQQAqAsTFMDgCyMUwQQBBACoC3MUwOALgxTBBAEEAKgLkxTA4AujFMEEAQQAqAviFNTgC/IU1QQBBACoCkIY1OAKUhjVBAEEAKgKYhjU4ApyGNUEAQQAqAqyGOjgCsIY6QQBBACoCxIY6OALIhjpBAEEAKgLMhjo4AtCGOkEAQQAqAuCGPzgC5IY/QQBBACoC+IY/OAL8hj9BAEEAKgKAhz84AoSHP0EAQQAqApTHQzgCmMdDQQBBACoCoMdDOAKkx0NBAEEAKgKcx0M4AqDHQ0EAQQAqAqzHQzgCsMdDQQBBACoCqMdDOAKsx0NBAEEAKgK4x0M4ArzHQ0EAQQAqArTHQzgCuMdDQQBBACoCxMdDOALIx0NBAEEAKgLAx0M4AsTHQ0EAQQAqAtDHQzgC1MdDQQBBACoCzMdDOALQx0NBAEEAKgLcx0M4AuDHQ0EAQQAqAtjHQzgC3MdDQQBBACoC6MdDOALsx0NBAEEAKgLkx0M4AujHQ0EAQQAqAvTHQzgC+MdDQQBBACoC8MdDOAL0x0NBAEEAKgKAyEM4AoTIQyASQQRqIRIgEkEEIAFsSARADAIMAQsLCwuFgICAAABBAA8LhYCAgAAAQQIPC4uAgIAAACAAIAFqKgIADwuKgICAAABBACgCjIAQDwuOgICAAAAgACABEAUgACABEA4L56eAgAABY39BACEBQQAhAkEAIQNBACEEQQAhBUEAIQZBACEHQQAhCEEAIQlBACEKQQAhC0EAIQxBACENQQAhDkEAIQ9BACEQQQAhEUEAIRJBACETQQAhFEEAIRVBACEWQQAhF0EAIRhBACEZQQAhGkEAIRtBACEcQQAhHUEAIR5BACEfQQAhIEEAISFBACEiQQAhI0EAISRBACElQQAhJkEAISdBACEoQQAhKUEAISpBACErQQAhLEEAIS1BACEuQQAhL0EAITBBACExQQAhMkEAITNBACE0QQAhNUEAITZBACE3QQAhOEEAITlBACE6QQAhO0EAITxBACE9QQAhPkEAIT9BACFAQQAhQUEAIUJBACFDQQAhREEAIUVBACFGQQAhR0EAIUhBACFJQQAhSkEAIUtBACFMQQAhTUEAIU5BACFPQQAhUEEAIVFBACFSQQAhU0EAIVRBACFVQQAhVkEAIVdBACFYQQAhWUEAIVpBACFbQQAhXEEAIV1BACFeQQAhX0EAIWBBACFhQQAhYkEAIWNBACEBA0ACQEGEgBAgAUECdGpBADYCACABQQFqIQEgAUECSARADAIMAQsLC0EAIQIDQAJAQbyAECACQQJ0akMAAAAAOAIAIAJBAWohAiACQQJIBEAMAgwBCwsLQQAhAwNAAkBBxIAQIANBAnRqQwAAAAA4AgAgA0EBaiEDIANBAkgEQAwCDAELCwtBAEEANgLMgBBBACEEA0ACQEHQgBAgBEECdGpDAAAAADgCACAEQQFqIQQgBEGAgAJIBEAMAgwBCwsLQQAhBQNAAkBB7IAYIAVBAnRqQwAAAAA4AgAgBUEBaiEFIAVBAkgEQAwCDAELCwtBACEGA0ACQEH8gBggBkECdGpDAAAAADgCACAGQQFqIQYgBkECSARADAIMAQsLC0EAIQcDQAJAQYiBGCAHQQJ0akMAAAAAOAIAIAdBAWohByAHQQJIBEAMAgwBCwsLQQAhCANAAkBBkIEYIAhBAnRqQwAAAAA4AgAgCEEBaiEIIAhBAkgEQAwCDAELCwtBACEJA0ACQEGggRggCUECdGpDAAAAADgCACAJQQFqIQkgCUECSARADAIMAQsLC0EAIQoDQAJAQaiBGCAKQQJ0akMAAAAAOAIAIApBAWohCiAKQQJIBEAMAgwBCwsLQQAhCwNAAkBBsIEYIAtBAnRqQwAAAAA4AgAgC0EBaiELIAtBAkgEQAwCDAELCwtBACEMA0ACQEG4gRggDEECdGpDAAAAADgCACAMQQFqIQwgDEECSARADAIMAQsLC0EAIQ0DQAJAQciBGCANQQJ0akMAAAAAOAIAIA1BAWohDSANQQJIBEAMAgwBCwsLQQAhDgNAAkBB0IEYIA5BAnRqQwAAAAA4AgAgDkEBaiEOIA5BAkgEQAwCDAELCwtBACEPA0ACQEHYgRggD0ECdGpDAAAAADgCACAPQQFqIQ8gD0ECSARADAIMAQsLC0EAIRADQAJAQeCBGCAQQQJ0akMAAAAAOAIAIBBBAWohECAQQQJIBEAMAgwBCwsLQQAhEQNAAkBB6IEYIBFBAnRqQwAAAAA4AgAgEUEBaiERIBFBAkgEQAwCDAELCwtBACESA0ACQEHwgRggEkECdGpDAAAAADgCACASQQFqIRIgEkECSARADAIMAQsLC0EAIRMDQAJAQfiBGCATQQJ0akMAAAAAOAIAIBNBAWohEyATQQJIBEAMAgwBCwsLQQAhFANAAkBBgIIYIBRBAnRqQwAAAAA4AgAgFEEBaiEUIBRBAkgEQAwCDAELCwtBACEVA0ACQEGMghggFUECdGpDAAAAADgCACAVQQFqIRUgFUECSARADAIMAQsLC0EAIRYDQAJAQZSCGCAWQQJ0akMAAAAAOAIAIBZBAWohFiAWQQJIBEAMAgwBCwsLQQAhFwNAAkBBnIIYIBdBAnRqQwAAAAA4AgAgF0EBaiEXIBdBAkgEQAwCDAELCwtBACEYA0ACQEGkghggGEECdGpDAAAAADgCACAYQQFqIRggGEECSARADAIMAQsLC0EAIRkDQAJAQayCGCAZQQJ0akMAAAAAOAIAIBlBAWohGSAZQQJIBEAMAgwBCwsLQQAhGgNAAkBBtIIYIBpBAnRqQwAAAAA4AgAgGkEBaiEaIBpBAkgEQAwCDAELCwtBACEbA0ACQEG8ghggG0ECdGpDAAAAADgCACAbQQFqIRsgG0ECSARADAIMAQsLC0EAIRwDQAJAQcSCGCAcQQJ0akMAAAAAOAIAIBxBAWohHCAcQQJIBEAMAgwBCwsLQQAhHQNAAkBBzIIYIB1BAnRqQwAAAAA4AgAgHUEBaiEdIB1BAkgEQAwCDAELCwtBACEeA0ACQEHUghggHkECdGpDAAAAADgCACAeQQFqIR4gHkECSARADAIMAQsLC0EAIR8DQAJAQeCCGCAfQQJ0akMAAAAAOAIAIB9BAWohHyAfQQJIBEAMAgwBCwsLQQAhIANAAkBB6IIYICBBAnRqQwAAAAA4AgAgIEEBaiEgICBBAkgEQAwCDAELCwtBACEhA0ACQEHwghggIUECdGpDAAAAADgCACAhQQFqISEgIUECSARADAIMAQsLC0EAISIDQAJAQfiCGCAiQQJ0akMAAAAAOAIAICJBAWohIiAiQQJIBEAMAgwBCwsLQQAhIwNAAkBBgIMYICNBAnRqQwAAAAA4AgAgI0EBaiEjICNBAkgEQAwCDAELCwtBACEkA0ACQEGIgxggJEECdGpDAAAAADgCACAkQQFqISQgJEECSARADAIMAQsLC0EAISUDQAJAQZCDGCAlQQJ0akMAAAAAOAIAICVBAWohJSAlQQJIBEAMAgwBCwsLQQAhJgNAAkBBmIMYICZBAnRqQwAAAAA4AgAgJkEBaiEmICZBAkgEQAwCDAELCwtBACEnA0ACQEGggxggJ0ECdGpDAAAAADgCACAnQQFqIScgJ0ECSARADAIMAQsLC0EAISgDQAJAQayDGCAoQQJ0akMAAAAAOAIAIChBAWohKCAoQQJIBEAMAgwBCwsLQQAhKQNAAkBBtIMYIClBAnRqQwAAAAA4AgAgKUEBaiEpIClBAkgEQAwCDAELCwtBACEqA0ACQEG8gxggKkECdGpDAAAAADgCACAqQQFqISogKkECSARADAIMAQsLC0EAISsDQAJAQcSDGCArQQJ0akMAAAAAOAIAICtBAWohKyArQQJIBEAMAgwBCwsLQQAhLANAAkBBzIMYICxBAnRqQwAAAAA4AgAgLEEBaiEsICxBAkgEQAwCDAELCwtBACEtA0ACQEHUgxggLUECdGpDAAAAADgCACAtQQFqIS0gLUECSARADAIMAQsLC0EAIS4DQAJAQdyDGCAuQQJ0akMAAAAAOAIAIC5BAWohLiAuQQJIBEAMAgwBCwsLQQAhLwNAAkBB5IMYIC9BAnRqQwAAAAA4AgAgL0EBaiEvIC9BAkgEQAwCDAELCwtBACEwA0ACQEHsgxggMEECdGpDAAAAADgCACAwQQFqITAgMEECSARADAIMAQsLC0EAITEDQAJAQfSDGCAxQQJ0akMAAAAAOAIAIDFBAWohMSAxQQJIBEAMAgwBCwsLQQAhMgNAAkBBgIQYIDJBAnRqQwAAAAA4AgAgMkEBaiEyIDJBAkgEQAwCDAELCwtBACEzA0ACQEGMhBggM0ECdGpDAAAAADgCACAzQQFqITMgM0ECSARADAIMAQsLC0EAITQDQAJAQZiEGCA0QQJ0akMAAAAAOAIAIDRBAWohNCA0QQJIBEAMAgwBCwsLQQAhNQNAAkBBoIQYIDVBAnRqQwAAAAA4AgAgNUEBaiE1IDVBgCBIBEAMAgwBCwsLQQAhNgNAAkBBpIQZIDZBAnRqQwAAAAA4AgAgNkEBaiE2IDZBgBBIBEAMAgwBCwsLQQAhNwNAAkBBqMQZIDdBAnRqQwAAAAA4AgAgN0EBaiE3IDdBAkgEQAwCDAELCwtBACE4A0ACQEHAxBkgOEECdGpDAAAAADgCACA4QQFqITggOEECSARADAIMAQsLC0EAITkDQAJAQcjEGSA5QQJ0akMAAAAAOAIAIDlBAWohOSA5QQJIBEAMAgwBCwsLQQAhOgNAAkBB0MQZIDpBAnRqQwAAAAA4AgAgOkEBaiE6IDpBgIACSARADAIMAQsLC0EAITsDQAJAQdjEISA7QQJ0akMAAAAAOAIAIDtBAWohOyA7QYAgSARADAIMAQsLC0EAITwDQAJAQdzEIiA8QQJ0akMAAAAAOAIAIDxBAWohPCA8QQJIBEAMAgwBCwsLQQAhPQNAAkBB9MQiID1BAnRqQwAAAAA4AgAgPUEBaiE9ID1BAkgEQAwCDAELCwtBACE+A0ACQEH8xCIgPkECdGpDAAAAADgCACA+QQFqIT4gPkECSARADAIMAQsLC0EAIT8DQAJAQYTFIiA/QQJ0akMAAAAAOAIAID9BAWohPyA/QYCAAUgEQAwCDAELCwtBACFAA0ACQEGMxSYgQEECdGpDAAAAADgCACBAQQFqIUAgQEGAIEgEQAwCDAELCwtBACFBA0ACQEGQxScgQUECdGpDAAAAADgCACBBQQFqIUEgQUECSARADAIMAQsLC0EAIUIDQAJAQajFJyBCQQJ0akMAAAAAOAIAIEJBAWohQiBCQQJIBEAMAgwBCwsLQQAhQwNAAkBBsMUnIENBAnRqQwAAAAA4AgAgQ0EBaiFDIENBAkgEQAwCDAELCwtBACFEA0ACQEG4xScgREECdGpDAAAAADgCACBEQQFqIUQgREGAgAJIBEAMAgwBCwsLQQAhRQNAAkBBwMUvIEVBAnRqQwAAAAA4AgAgRUEBaiFFIEVBgCBIBEAMAgwBCwsLQQAhRgNAAkBBxMUwIEZBAnRqQwAAAAA4AgAgRkEBaiFGIEZBAkgEQAwCDAELCwtBACFHA0ACQEHcxTAgR0ECdGpDAAAAADgCACBHQQFqIUcgR0ECSARADAIMAQsLC0EAIUgDQAJAQeTFMCBIQQJ0akMAAAAAOAIAIEhBAWohSCBIQQJIBEAMAgwBCwsLQQAhSQNAAkBB7MUwIElBAnRqQwAAAAA4AgAgSUEBaiFJIElBgIABSARADAIMAQsLC0EAIUoDQAJAQfTFNCBKQQJ0akMAAAAAOAIAIEpBAWohSiBKQYAQSARADAIMAQsLC0EAIUsDQAJAQfiFNSBLQQJ0akMAAAAAOAIAIEtBAWohSyBLQQJIBEAMAgwBCwsLQQAhTANAAkBBkIY1IExBAnRqQwAAAAA4AgAgTEEBaiFMIExBAkgEQAwCDAELCwtBACFNA0ACQEGYhjUgTUECdGpDAAAAADgCACBNQQFqIU0gTUECSARADAIMAQsLC0EAIU4DQAJAQaCGNSBOQQJ0akMAAAAAOAIAIE5BAWohTiBOQYCAAUgEQAwCDAELCwtBACFPA0ACQEGohjkgT0ECdGpDAAAAADgCACBPQQFqIU8gT0GAIEgEQAwCDAELCwtBACFQA0ACQEGshjogUEECdGpDAAAAADgCACBQQQFqIVAgUEECSARADAIMAQsLC0EAIVEDQAJAQcSGOiBRQQJ0akMAAAAAOAIAIFFBAWohUSBRQQJIBEAMAgwBCwsLQQAhUgNAAkBBzIY6IFJBAnRqQwAAAAA4AgAgUkEBaiFSIFJBAkgEQAwCDAELCwtBACFTA0ACQEHUhjogU0ECdGpDAAAAADgCACBTQQFqIVMgU0GAgAFIBEAMAgwBCwsLQQAhVANAAkBB3IY+IFRBAnRqQwAAAAA4AgAgVEEBaiFUIFRBgCBIBEAMAgwBCwsLQQAhVQNAAkBB4IY/IFVBAnRqQwAAAAA4AgAgVUEBaiFVIFVBAkgEQAwCDAELCwtBACFWA0ACQEH4hj8gVkECdGpDAAAAADgCACBWQQFqIVYgVkECSARADAIMAQsLC0EAIVcDQAJAQYCHPyBXQQJ0akMAAAAAOAIAIFdBAWohVyBXQQJIBEAMAgwBCwsLQQAhWANAAkBBiIc/IFhBAnRqQwAAAAA4AgAgWEEBaiFYIFhBgIABSARADAIMAQsLC0EAIVkDQAJAQZCHwwAgWUECdGpDAAAAADgCACBZQQFqIVkgWUGAEEgEQAwCDAELCwtBACFaA0ACQEGUx8MAIFpBAnRqQwAAAAA4AgAgWkEBaiFaIFpBAkgEQAwCDAELCwtBACFbA0ACQEGcx8MAIFtBAnRqQwAAAAA4AgAgW0EBaiFbIFtBA0gEQAwCDAELCwtBACFcA0ACQEGox8MAIFxBAnRqQwAAAAA4AgAgXEEBaiFcIFxBA0gEQAwCDAELCwtBACFdA0ACQEG0x8MAIF1BAnRqQwAAAAA4AgAgXUEBaiFdIF1BA0gEQAwCDAELCwtBACFeA0ACQEHAx8MAIF5BAnRqQwAAAAA4AgAgXkEBaiFeIF5BA0gEQAwCDAELCwtBACFfA0ACQEHMx8MAIF9BAnRqQwAAAAA4AgAgX0EBaiFfIF9BA0gEQAwCDAELCwtBACFgA0ACQEHYx8MAIGBBAnRqQwAAAAA4AgAgYEEBaiFgIGBBA0gEQAwCDAELCwtBACFhA0ACQEHkx8MAIGFBAnRqQwAAAAA4AgAgYUEBaiFhIGFBA0gEQAwCDAELCwtBACFiA0ACQEHwx8MAIGJBAnRqQwAAAAA4AgAgYkEBaiFiIGJBA0gEQAwCDAELCwtBACFjA0ACQEGAyMMAIGNBAnRqQwAAAAA4AgAgY0EBaiFjIGNBAkgEQAwCDAELCwsLwY+AgAAAQQAgATYCjIAQQQBDAIA7SEMAAIA/QQAoAoyAELKXljgCkIAQQQBDHUMTR0EAKgKQgBCVEAA4ApSAEEEAQ1JFYT5BACoCkIAQlEMAAAA/ko44ApiAEEEAQwAAAABDVQzdQEEAKgKYgBCUk0EAKgKQgBCVOAKcgBBBAEMAAAA/QQAqApyAEJQ4AqCAEEEAQ6uqqj5BACoCnIAQlDgCqIAQQQBDAACAP0NjFB1EQQAqApCAEJUQBJU4AqyAEEEAQQAqAqyAEEMAAIA/kjgCsIAQQQBDAAAAAEMAAIA/QQAqAqyAEJNBACoCsIAQlZM4ArSAEEEAQwAAgD9BACoCsIAQlTgCuIAQQQBD1qecPEEAKgKQgBCUQwAAAD+SjjgC0IAYQQBDAACARkMAAAAAQQAqApiAEEEAKgLQgBiTl5aoNgLUgBhBAEMAAIA/Q3xZxEVBACoCkIAQlRAElTgC2IAYQQBBACoC2IAYQwAAgD+SOALcgBhBAEMAAIA/QQAqAtyAGJU4AuCAGEEAQwAAAEBBACoCkIAQlDgC6IAYQQBDAAAAP0EAKgKQgBCVOAL0gBhBAEMAAEBAQQAqApCAEJQ4AviAGEEAQ6uqqj5BACoCkIAQlTgChIEYQQBD2w/JQEEAKgKQgBCVOAKYgRhBAEMAAIA/QQAqApCAEJU4AsCBGEEAQwAAAABDAACAP0EAKgLYgBiTQQAqAtyAGJWTOAL8gxhBAEMAAABGQwAAAABDCtejPEEAKgKQgBCUl5aoNgKghBlBAEMAAIBEQwAAAABBACoC0IAYQwAAgL+Sl5aoNgKkxBlBAEM4h4M+QQAqApCAEJRDAAAAP5KOOAKwxBlBAEMAAAAAQ1UM3UBBACoCsMQZlJNBACoCkIAQlTgCtMQZQQBDAAAAP0EAKgK0xBmUOAK4xBlBAEOrqqo+QQAqArTEGZQ4ArzEGUEAQ3Xp3zxBACoCkIAQlEMAAAA/ko44AtDEIUEAQwAAgEZDAAAAAEEAKgKwxBlBACoC0MQhk5eWqDYC1MQhQQBDAAAARUMAAAAAQQAqAtDEIUMAAIC/kpeWqDYC2MQiQQBDFOtEPkEAKgKQgBCUQwAAAD+SjjgC5MQiQQBDAAAAAENVDN1AQQAqAuTEIpSTQQAqApCAEJU4AujEIkEAQwAAAD9BACoC6MQilDgC7MQiQQBDq6qqPkEAKgLoxCKUOALwxCJBAEOu8+88QQAqApCAEJRDAAAAP5KOOAKExSZBAEMAAABGQwAAAABBACoC5MQiQQAqAoTFJpOXlqg2AojFJkEAQwAAAEVDAAAAAEEAKgKExSZDAACAv5KXlqg2AozFJ0EAQzdwVz5BACoCkIAQlEMAAAA/ko44ApjFJ0EAQwAAAABDVQzdQEEAKgKYxSeUk0EAKgKQgBCVOAKcxSdBAEMAAAA/QQAqApzFJ5Q4AqDFJ0EAQ6uqqj5BACoCnMUnlDgCpMUnQQBDjQ7IPEEAKgKQgBCUQwAAAD+SjjgCuMUvQQBDAACARkMAAAAAQQAqApjFJ0EAKgK4xS+Tl5aoNgK8xS9BAEMAAABFQwAAAABBACoCuMUvQwAAgL+Sl5aoNgLAxTBBAEMAAAA+QQAqApCAEJRDAAAAP5KOOALMxTBBAEMAAAAAQ1UM3UBBACoCzMUwlJNBACoCkIAQlTgC0MUwQQBDAAAAP0EAKgLQxTCUOALUxTBBAEOrqqo+QQAqAtDFMJQ4AtjFMEEAQ/F+XDxBACoCkIAQlEMAAAA/ko44AuzFNEEAQwAAAEZDAAAAAEEAKgLMxTBBACoC7MU0k5eWqDYC8MU0QQBDAACAREMAAAAAQQAqAuzFNEMAAIC/kpeWqDYC9IU1QQBD9+cyPkEAKgKQgBCUQwAAAD+SjjgCgIY1QQBDAAAAAENVDN1AQQAqAoCGNZSTQQAqApCAEJU4AoSGNUEAQwAAAD9BACoChIY1lDgCiIY1QQBDq6qqPkEAKgKEhjWUOAKMhjVBAEMrobs8QQAqApCAEJRDAAAAP5KOOAKghjlBAEMAAABGQwAAAABBACoCgIY1QQAqAqCGOZOXlqg2AqSGOUEAQwAAAEVDAAAAAEEAKgKghjlDAACAv5KXlqg2AqiGOkEAQ7TnAj5BACoCkIAQlEMAAAA/ko44ArSGOkEAQwAAAABDVQzdQEEAKgK0hjqUk0EAKgKQgBCVOAK4hjpBAEMAAAA/QQAqAriGOpQ4AryGOkEAQ6uqqj5BACoCuIY6lDgCwIY6QQBDMnMBPUEAKgKQgBCUQwAAAD+SjjgC1IY+QQBDAAAARkMAAAAAQQAqArSGOkEAKgLUhj6Tl5aoNgLYhj5BAEMAAABFQwAAAABBACoC1IY+QwAAgL+Sl5aoNgLchj9BAEPZzRw+QQAqApCAEJRDAAAAP5KOOALohj9BAEMAAAAAQ1UM3UBBACoC6IY/lJNBACoCkIAQlTgC7IY/QQBDAAAAP0EAKgLshj+UOALwhj9BAEOrqqo+QQAqAuyGP5Q4AvSGP0EAQ6ispjxBACoCkIAQlEMAAAA/ko44AoiHQ0EAQwAAAEZDAAAAAEEAKgLohj9BACoCiIdDk5eWqDYCjIdDQQBDAACAREMAAAAAQQAqAoiHQ0MAAIC/kpeWqDYCkMdDC5CAgIAAACAAIAEQDSAAEA8gABAMC/qAgIAAAEEAQwAAAD84AqSAEEEAQwAAAAA4AuSAGEEAQwAAlkQ4ApyBGEEAQwAApUM4AsSBGEEAQwAAAAA4AoiCGEEAQwAAAAA4AtyCGEEAQwAAAAA4AqiDGEEAQwAAAD84AoiEGEEAQwAAgD44ApSEGEEAQwAAgD84AvzHQwuNgICAAAAgASAAIAAgAUgbDwuNgICAAAAgACABIAAgAUgbDwuMgICAAAAgACABaiACOAIACwvxnoCAAAEAQQAL6h57Im5hbWUiOiJNb2R1bGF0aW9ucyIsImZpbGVuYW1lIjoiTW9kdWxhdGlvbnMiLCJ2ZXJzaW9uIjoiMi43LjAiLCJvcHRpb25zIjoid2FzbS1pYiwgLXNjYWwgLWZ0eiAyIiwic2l6ZSI6IjExMDY5NjAiLCJpbnB1dHMiOiIwIiwib3V0cHV0cyI6IjIiLCJtZXRhIjpbeyJhdXRob3IiOiJFUiJ9LHsiYmFzaWNzLmxpYi9uYW1lIjoiRmF1c3QgQmFzaWMgRWxlbWVudCBMaWJyYXJ5In0seyJiYXNpY3MubGliL3ZlcnNpb24iOiIwLjAifSx7ImRlbGF5cy5saWIvbmFtZSI6IkZhdXN0IERlbGF5IExpYnJhcnkifSx7ImRlbGF5cy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsiZW52ZWxvcGVzLmxpYi9hdXRob3IiOiJHUkFNRSJ9LHsiZW52ZWxvcGVzLmxpYi9jb3B5cmlnaHQiOiJHUkFNRSJ9LHsiZW52ZWxvcGVzLmxpYi9saWNlbnNlIjoiTEdQTCB3aXRoIGV4Y2VwdGlvbiJ9LHsiZW52ZWxvcGVzLmxpYi9uYW1lIjoiRmF1c3QgRW52ZWxvcGUgTGlicmFyeSJ9LHsiZW52ZWxvcGVzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJmaWxlbmFtZSI6Ik1vZHVsYXRpb25zIn0seyJmaWx0ZXJzLmxpYi9uYW1lIjoiRmF1c3QgRmlsdGVycyBMaWJyYXJ5In0seyJmaWx0ZXJzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJpbnN0cnVtZW50cy5saWIvYXV0aG9yIjoiUm9tYWluIE1pY2hvbiAocm1pY2hvbkBjY3JtYS5zdGFuZm9yZC5lZHUpIn0seyJpbnN0cnVtZW50cy5saWIvY29weXJpZ2h0IjoiUm9tYWluIE1pY2hvbiJ9LHsiaW5zdHJ1bWVudHMubGliL2xpY2VuY2UiOiJTVEstNC4zIn0seyJpbnN0cnVtZW50cy5saWIvbmFtZSI6IkZhdXN0LVNUSyBUb29scyBMaWJyYXJ5In0seyJpbnN0cnVtZW50cy5saWIvdmVyc2lvbiI6IjEuMCJ9LHsibWF0aHMubGliL2F1dGhvciI6IkdSQU1FIn0seyJtYXRocy5saWIvY29weXJpZ2h0IjoiR1JBTUUifSx7Im1hdGhzLmxpYi9saWNlbnNlIjoiTEdQTCB3aXRoIGV4Y2VwdGlvbiJ9LHsibWF0aHMubGliL25hbWUiOiJGYXVzdCBNYXRoIExpYnJhcnkifSx7Im1hdGhzLmxpYi92ZXJzaW9uIjoiMi4xIn0seyJuYW1lIjoiTW9kdWxhdGlvbnMifSx7Im9zY2lsbGF0b3JzLmxpYi9uYW1lIjoiRmF1c3QgT3NjaWxsYXRvciBMaWJyYXJ5In0seyJvc2NpbGxhdG9ycy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsicmV2ZXJicy5saWIvbmFtZSI6IkZhdXN0IFJldmVyYiBMaWJyYXJ5In0seyJyZXZlcmJzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJyb3V0ZXMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJyb3V0ZXMubGliL3ZlcnNpb24iOiIwLjAifSx7InNpZ25hbHMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJzaWduYWxzLmxpYi92ZXJzaW9uIjoiMC4wIn1dLCJ1aSI6W3sidHlwZSI6InZncm91cCIsImxhYmVsIjoiTW9kdWxhdGlvbnMiLCJpdGVtcyI6W3sidHlwZSI6Imhncm91cCIsImxhYmVsIjoiSW5zdHJ1bWVudCIsIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiRnJlcXVlbmN5IiwiYWRkcmVzcyI6Ii9Nb2R1bGF0aW9ucy9JbnN0cnVtZW50L0ZyZXF1ZW5jeSIsImluZGV4IjoiMzkzNDEyIiwibWV0YSI6W3siYWNjIjoiMSAxIC0xMCAwIDE1In0seyJ1bml0IjoiSHoifV0sImluaXQiOiIzMzAiLCJtaW4iOiIxMDAiLCJtYXgiOiIxMjAwIiwic3RlcCI6IjAuMSJ9LHsidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IkdlbmVyYWwgVm9sdW1lIiwiYWRkcmVzcyI6Ii9Nb2R1bGF0aW9ucy9JbnN0cnVtZW50L0dlbmVyYWxfVm9sdW1lIiwiaW5kZXgiOiIxMTA2OTQwIiwibWV0YSI6W3siYWNjIjoiMSAxIC0xMCAwIDEwIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiIxIiwibWluIjoiMC43NSIsIm1heCI6IjQiLCJzdGVwIjoiMC4wMSJ9LHsidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6Ik9zY2lsbGF0b3IgVm9sdW1lIiwiYWRkcmVzcyI6Ii9Nb2R1bGF0aW9ucy9JbnN0cnVtZW50L09zY2lsbGF0b3JfVm9sdW1lIiwiaW5kZXgiOiIzOTM3MzYiLCJtZXRhIjpbeyJhY2MiOiIxIDAgLTEwIDAgMTAifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjAuNSIsIm1pbiI6IjAiLCJtYXgiOiIxIiwic3RlcCI6IjAuMDEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJNb2R1bGF0aW5nIEZyZXF1ZW5jeSIsImFkZHJlc3MiOiIvTW9kdWxhdGlvbnMvSW5zdHJ1bWVudC9Nb2R1bGF0aW5nX0ZyZXF1ZW5jeSIsImluZGV4IjoiMzkzMzcyIiwibWV0YSI6W3siYWNjIjoiMCAwIC0xMCAwIDEwIn0seyJzdHlsZSI6Imtub2IifSx7InVuaXQiOiJIeiJ9XSwiaW5pdCI6IjEyMDAiLCJtaW4iOiI5MDAiLCJtYXgiOiIxNzAwIiwic3RlcCI6IjAuMSJ9XX0seyJ0eXBlIjoidmdyb3VwIiwibGFiZWwiOiJNb2R1bGF0aW9ucyIsIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUGxheSBNb2R1bGF0aW9uIDAgKEFTUiBFbnZlbG9wZSkiLCJhZGRyZXNzIjoiL01vZHVsYXRpb25zL01vZHVsYXRpb25zL1BsYXlfTW9kdWxhdGlvbl8wXyhBU1JfRW52ZWxvcGUpIiwiaW5kZXgiOiIzOTM0ODAiLCJtZXRhIjpbeyJhY2MiOiIwIDAgLTMwIDAgMTAifSx7InRvb2x0aXAiOiJub3RlT24gPSAxLCBub3RlT2ZmID0gMCJ9XSwiaW5pdCI6IjAiLCJtaW4iOiIwIiwibWF4IjoiMSIsInN0ZXAiOiIxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUGxheSBNb2R1bGF0aW9uIDEgKEFTUiBFbnZlbG9wZSkiLCJhZGRyZXNzIjoiL01vZHVsYXRpb25zL01vZHVsYXRpb25zL1BsYXlfTW9kdWxhdGlvbl8xXyhBU1JfRW52ZWxvcGUpIiwiaW5kZXgiOiIzOTM1NjQiLCJtZXRhIjpbeyJhY2MiOiIwIDAgLTMwIDAgNSJ9LHsidG9vbHRpcCI6Im5vdGVPbiA9IDEsIG5vdGVPZmYgPSAwIn1dLCJpbml0IjoiMCIsIm1pbiI6IjAiLCJtYXgiOiIxIiwic3RlcCI6IjEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJQbGF5IE1vZHVsYXRpb24gMiAoQVNSIEVudmVsb3BlKSIsImFkZHJlc3MiOiIvTW9kdWxhdGlvbnMvTW9kdWxhdGlvbnMvUGxheV9Nb2R1bGF0aW9uXzJfKEFTUl9FbnZlbG9wZSkiLCJpbmRleCI6IjM5MzY0MCIsIm1ldGEiOlt7ImFjYyI6IjIgMSAtMzAgMCAxMCJ9LHsidG9vbHRpcCI6Im5vdGVPbiA9IDEsIG5vdGVPZmYgPSAwIn1dLCJpbml0IjoiMCIsIm1pbiI6IjAiLCJtYXgiOiIxIiwic3RlcCI6IjEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJQbGF5IE1vZHVsYXRpb24gMyAoQVNSIEVudmVsb3BlKSIsImFkZHJlc3MiOiIvTW9kdWxhdGlvbnMvTW9kdWxhdGlvbnMvUGxheV9Nb2R1bGF0aW9uXzNfKEFTUl9FbnZlbG9wZSkiLCJpbmRleCI6IjM5MzMxNiIsIm1ldGEiOlt7ImFjYyI6IjEgMCAtMTAgMCAxMCJ9LHsidG9vbHRpcCI6Im5vdGVPbiA9IDEsIG5vdGVPZmYgPSAwIn1dLCJpbml0IjoiMCIsIm1pbiI6IjAiLCJtYXgiOiIxIiwic3RlcCI6IjEifV19LHsidHlwZSI6InZncm91cCIsImxhYmVsIjoiUmV2ZXJiIiwiaXRlbXMiOlt7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJSZXZlcmJlcmF0aW9uIFJvb20gU2l6ZShJbnN0clJldmVyYikiLCJhZGRyZXNzIjoiL01vZHVsYXRpb25zL1JldmVyYi9SZXZlcmJlcmF0aW9uX1Jvb21fU2l6ZShJbnN0clJldmVyYikiLCJpbmRleCI6IjI2MjE4MCIsIm1ldGEiOlt7ImFjYyI6IjEgMSAtMTAgMCAxMCJ9XSwiaW5pdCI6IjAuNSIsIm1pbiI6IjAuMDUiLCJtYXgiOiIyIiwic3RlcCI6IjAuMDEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJSZXZlcmJlcmF0aW9uIFZvbHVtZShJbnN0clJldmVyYikiLCJhZGRyZXNzIjoiL01vZHVsYXRpb25zL1JldmVyYi9SZXZlcmJlcmF0aW9uX1ZvbHVtZShJbnN0clJldmVyYikiLCJpbmRleCI6IjM5Mzc0OCIsIm1ldGEiOlt7ImFjYyI6IjEgMSAtMTAgMCAxMCJ9XSwiaW5pdCI6IjAuMjUiLCJtaW4iOiIwLjA1IiwibWF4IjoiMSIsInN0ZXAiOiIwLjAxIn1dfV19XX0w"; }

/*
 faust2wasm: GRAME 2017-2018
*/
 
'use strict';

// Monophonic Faust DSP
class ModulationsProcessor extends AudioWorkletProcessor {
    
    // JSON parsing functions
    static parse_ui(ui, obj, callback)
    {
        for (var i = 0; i < ui.length; i++) {
            ModulationsProcessor.parse_group(ui[i], obj, callback);
        }
    }
    
    static parse_group(group, obj, callback)
    {
        if (group.items) {
            ModulationsProcessor.parse_items(group.items, obj, callback);
        }
    }
    
    static parse_items(items, obj, callback)
    {
        for (var i = 0; i < items.length; i++) {
            callback(items[i], obj, callback);
        }
    }
    
    static parse_item1(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            ModulationsProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Nothing
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            obj.push({ name: item.address,
                     defaultValue: item.init,
                     minValue: item.min,
                     maxValue: item.max });
        }
    }
    
    static parse_item2(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            ModulationsProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Keep bargraph adresses
            obj.outputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "soundfile") {
            // Keep soundfile adresses
            obj.soundfile_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            // Keep inputs adresses
            obj.inputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        }
    }
    
    static b64ToUint6(nChr)
    {
        return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
        nChr - 71
        : nChr > 47 && nChr < 58 ?
        nChr + 4
        : nChr === 43 ?
        62
        : nChr === 47 ?
        63
        :
        0;
    }
    
    static atob(sBase64, nBlocksSize)
    {
        if (typeof atob === 'function') {
            return atob(sBase64);
        } else {
            
            var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
            var nInLen = sB64Enc.length;
            var nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;
            var taBytes = new Uint8Array(nOutLen);
            
            for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
                nMod4 = nInIdx & 3;
                nUint24 |= ModulationsProcessor.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
                if (nMod4 === 3 || nInLen - nInIdx === 1) {
                    for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
                    }
                    nUint24 = 0;
                }
            }
            return taBytes.buffer;
        }
    }
   
    static get parameterDescriptors () 
    {
        // Analyse JSON to generate AudioParam parameters
        var params = [];
        ModulationsProcessor.parse_ui(JSON.parse(getJSONModulations()).ui, params, ModulationsProcessor.parse_item1);
        return params;
    }
    
    constructor(options)
    {
        super(options);
      
        this.json_object = JSON.parse(getJSONModulations());

        this.output_handler = function(path, value) { this.port.postMessage({ path: path, value: value }); };
        
        this.ins = null;
        this.outs = null;

        this.dspInChannnels = [];
        this.dspOutChannnels = [];

        this.numIn = parseInt(this.json_object.inputs);
        this.numOut = parseInt(this.json_object.outputs);

        // Memory allocator
        this.ptr_size = 4;
        this.sample_size = 4;
        this.integer_size = 4;
        
        this.Modulations_instance = new WebAssembly.Instance(ModulationsProcessor.wasm_module, ModulationsProcessor.importObject);
  	   	this.factory = this.Modulations_instance.exports;
        this.HEAP = this.Modulations_instance.exports.memory.buffer;
        this.HEAP32 = new Int32Array(this.HEAP);
        this.HEAPF32 = new Float32Array(this.HEAP);

        //console.log(this.HEAP);
        //console.log(this.HEAP32);
        //console.log(this.HEAPF32);

        // bargraph
        this.outputs_timer = 5;
        this.outputs_items = [];

        // input items
        this.inputs_items = [];
        
        // soundfile items
        this.soundfile_items = [];

        // Start of HEAP index

        // DSP is placed first with index 0. Audio buffer start at the end of DSP.
        this.audio_heap_ptr = parseInt(this.json_object.size);

        // Setup pointers offset
        this.audio_heap_ptr_inputs = this.audio_heap_ptr;
        this.audio_heap_ptr_outputs = this.audio_heap_ptr_inputs + (this.numIn * this.ptr_size);

        // Setup buffer offset
        this.audio_heap_inputs = this.audio_heap_ptr_outputs + (this.numOut * this.ptr_size);
        this.audio_heap_outputs = this.audio_heap_inputs + (this.numIn * ModulationsProcessor.buffer_size * this.sample_size);
        
        // Start of DSP memory : DSP is placed first with index 0
        this.dsp = 0;

        this.pathTable = [];
     
        // Send output values to the AudioNode
        this.update_outputs = function ()
        {
            if (this.outputs_items.length > 0 && this.output_handler && this.outputs_timer-- === 0) {
                this.outputs_timer = 5;
                for (var i = 0; i < this.outputs_items.length; i++) {
                    this.output_handler(this.outputs_items[i], this.HEAPF32[this.pathTable[this.outputs_items[i]] >> 2]);
                }
            }
        }
        
        this.loadFile = function (sound_index, sound_ptr, length, sample_rate, channels, buffers)
        {
            /*
             Soundfile layout:
            
                FAUSTFLOAT** fBuffers;
                int fLength;
                int fSampleRate;
                int fChannels;
             
                ===========
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                ===========
            */
            
            var size_of_soundfile = this.ptr_size + (this.integer_size * 3);  // fBuffers, fLength, fSampleRate, fChannels
            
            //console.log("sound_ptr " + sound_ptr);
            //console.log("size_of_soundfile " + size_of_soundfile);
            
            // end of sounfile
            var end_of_soundfile_ptr = sound_ptr + size_of_soundfile;
            
            this.HEAP32[sound_ptr >> 2] = end_of_soundfile_ptr;
            this.HEAP32[(sound_ptr + 4) >> 2] = length;      // fLength
            this.HEAP32[(sound_ptr + 8) >> 2] = sample_rate; // fSampleRate
            this.HEAP32[(sound_ptr + 12) >> 2] = channels;   // fChannels
            
            //console.log("end_of_soundfile_ptr " + end_of_soundfile_ptr);
            
            // Setup soundfile pointers
            var start_of_soundfile_data_ptr = end_of_soundfile_ptr + this.ptr_size * channels;
            
            for (var i = 0; i < channels; i++) {
                this.HEAP32[(end_of_soundfile_ptr + (i * this.ptr_size)) >> 2] = start_of_soundfile_data_ptr + (i * length * this.sample_size);
            }
            
            // Setup soundfile buffer
            for (var i = 0; i < channels; i++) {
                
                // start of sound buffer
                var start_of_buffer_ptr = start_of_soundfile_data_ptr + (i * length * this.sample_size);
                
                // generate a 440 Hz signal
                for (var j = 0; j < length; j++) {
                    this.HEAPF32[(start_of_buffer_ptr + (j * this.sample_size)) >> 2] = 0.8 * Math.sin((j/length)*2*Math.PI);
                }
            }
            
            // Setup fSoundfile fields in the DSP structure
            //console.log("sound_index " + sound_index);
            //console.log("this.pathTable[this.soundfile_items[sound_index]] " + this.pathTable[this.soundfile_items[sound_index]]);
            
            this.HEAP32[this.pathTable[this.soundfile_items[sound_index]] >> 2] = sound_ptr;
            
            /*
            console.log("start_of_soundfile_data_ptr " + start_of_soundfile_data_ptr);
            console.log("length " + length);
            console.log("channels " + channels);
            console.log("this.sample_size " + this.sample_size);
            console.log("END " + (start_of_soundfile_data_ptr + (channels * length * this.sample_size)));
            */
            
            // End of buffer data;
            return start_of_soundfile_data_ptr + (channels * length * this.sample_size);
        }
        
        this.initAux = function ()
        {
            var i;
            
            if (this.numIn > 0) {
                this.ins = this.audio_heap_ptr_inputs;
                for (i = 0; i < this.numIn; i++) {
                    this.HEAP32[(this.ins >> 2) + i] = this.audio_heap_inputs + ((ModulationsProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Ins buffer tables
                var dspInChans = this.HEAP32.subarray(this.ins >> 2, (this.ins + this.numIn * this.ptr_size) >> 2);
                for (i = 0; i < this.numIn; i++) {
                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + ModulationsProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            if (this.numOut > 0) {
                this.outs = this.audio_heap_ptr_outputs;
                for (i = 0; i < this.numOut; i++) {
                    this.HEAP32[(this.outs >> 2) + i] = this.audio_heap_outputs + ((ModulationsProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Out buffer tables
                var dspOutChans = this.HEAP32.subarray(this.outs >> 2, (this.outs + this.numOut * this.ptr_size) >> 2);
                for (i = 0; i < this.numOut; i++) {
                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + ModulationsProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            // Parse UI
            ModulationsProcessor.parse_ui(this.json_object.ui, this, ModulationsProcessor.parse_item2);
            
            /*
            console.log("soundfile_items.length " + this.soundfile_items.length);
            
            // Setup soundfile offset (after audio data)
            this.soundfile_ptr = this.audio_heap_outputs + (this.numOut * ModulationsProcessor.buffer_size * this.sample_size);
            
            var sound_ptr1 = this.soundfile_ptr;
            var sound_ptr2 = this.loadFile(0, sound_ptr1, 44100/700, 44100, 2, null);
            var sound_ptr3 = this.loadFile(1, sound_ptr2, 44100/500, 44100, 2, null);
            */
             
            // Init DSP
            this.factory.init(this.dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope  
        }

        this.setParamValue = function (path, val)
        {
            this.HEAPF32[this.pathTable[path]] = val;
        }

        this.getParamValue = function (path)
        {
            return this.HEAPF32[this.pathTable[path]];
        }

        // Init resulting DSP
        this.initAux();
    }
    
    process(inputs, outputs, parameters) 
    {
        var input = inputs[0];
        var output = outputs[0];
        
        // Check inputs
        if (this.numIn > 0 && ((input === undefined) || (input[0].length === 0))) {
            //console.log("Process input error");
            return true;
        }
        // Check outputs
        if (this.numOut > 0 && ((output === undefined) || (output[0].length === 0))) {
            //console.log("Process output error");
            return true;
        }
        
        // Copy inputs
        if (input !== undefined) {
            for (var chan = 0; chan < Math.min(this.numIn, input.length) ; ++chan) {
                var dspInput = this.dspInChannnels[chan];
                dspInput.set(input[chan]);
            }
        }
        
        // Update controls (possibly needed for sample accurate control)
        var params = Object.entries(parameters);
        for (var i = 0; i < params.length; i++) {
            this.HEAPF32[this.pathTable[params[i][0]] >> 2] = params[i][1][0];
        }
        
        // Compute
        this.factory.compute(this.dsp, ModulationsProcessor.buffer_size, this.ins, this.outs);
        
        // Update bargraph
        this.update_outputs();
        
        // Copy outputs
        if (output !== undefined) {
            for (var chan = 0; chan < Math.min(this.numOut, output.length); ++chan) {
                var dspOutput = this.dspOutChannnels[chan];
                output[chan].set(dspOutput);
            }
        }
        
        return true;
    }
}

// Globals

ModulationsProcessor.buffer_size = 128;

ModulationsProcessor.importObject = {
    env: {
        memoryBase: 0,
        tableBase: 0,
            
        // Integer version
        _abs: Math.abs,
        
        // Float version
        _acosf: Math.acos,
        _asinf: Math.asin,
        _atanf: Math.atan,
        _atan2f: Math.atan2,
        _ceilf: Math.ceil,
        _cosf: Math.cos,
        _expf: Math.exp,
        _floorf: Math.floor,
        _fmodf: function(x, y) { return x % y; },
        _logf: Math.log,
        _log10f: Math.log10,
        _max_f: Math.max,
        _min_f: Math.min,
        _remainderf: function(x, y) { return x - Math.round(x/y) * y; },
        _powf: Math.pow,
        _roundf: Math.fround,
        _sinf: Math.sin,
        _sqrtf: Math.sqrt,
        _tanf: Math.tan,
           
        // Double version
        _acos: Math.acos,
        _asin: Math.asin,
        _atan: Math.atan,
        _atan2: Math.atan2,
        _ceil: Math.ceil,
        _cos: Math.cos,
        _exp: Math.exp,
        _floor: Math.floor,
        _fmod: function(x, y) { return x % y; },
        _log: Math.log,
        _log10: Math.log10,
        _max_: Math.max,
        _min_: Math.min,
        _remainder:function(x, y) { return x - Math.round(x/y) * y; },
        _pow: Math.pow,
        _round: Math.fround,
        _sin: Math.sin,
        _sqrt: Math.sqrt,
        _tan: Math.tan,
        
        table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })
    }
};

// Synchronously compile and instantiate the WASM module
try {
    if (ModulationsProcessor.wasm_module == undefined) {
        ModulationsProcessor.wasm_module = new WebAssembly.Module(ModulationsProcessor.atob(getBase64CodeModulations()));
        registerProcessor('Modulations', ModulationsProcessor);
    }
} catch (e) {
    console.log(e); console.log("Faust Modulations cannot be loaded or compiled");
}

