
/*
Code generated with Faust version 2.11.10
Compilation options: wasm-ib, -scal -ftz 2
*/

function getJSONPentatonicDryHarp() {
	return "{\"name\":\"PentatonicDryHarp\",\"filename\":\"PentatonicDryHarp\",\"version\":\"2.11.10\",\"compile_options\":\"-scal -ftz 2\",\"library_list\":[\"/usr/local/share/faust/stdfaust.lib\",\"/usr/local/share/faust/basics.lib\",\"/usr/local/share/faust/signals.lib\",\"/usr/local/share/faust/reverbs.lib\",\"/usr/local/share/faust/delays.lib\",\"/usr/local/share/faust/maths.lib\",\"/usr/local/share/faust/filters.lib\",\"/usr/local/share/faust/routes.lib\",\"/usr/local/share/faust/noises.lib\"],\"include_pathnames\":[\".\",\"/usr/local/share/faust\",\"/usr/share/faust\",\"/Documents/faustwebsite-github/modules-worklet\"],\"size\":\"876940\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"author\":\"ER\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"filename\":\"PentatonicDryHarp\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"PentatonicDryHarp\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"reverbs.lib/name\":\"Faust Reverb Library\"},{\"reverbs.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"Harp\",\"items\":[{\"type\":\"hslider\",\"label\":\"Instrument Hand\",\"address\":\"/Harp/Instrument_Hand\",\"index\":\"131260\",\"meta\":[{\"1\":\"\"},{\"acc\":\"0 1 -10 0 10\"}],\"init\":\"11\",\"min\":\"0\",\"max\":\"21\",\"step\":\"1\"},{\"type\":\"hgroup\",\"label\":\"Parameters\",\"meta\":[{\"2\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Speed\",\"address\":\"/Harp/Parameters/Speed\",\"index\":\"131232\",\"meta\":[{\"1\":\"\"},{\"acc\":\"0 1 -12 0 10\"},{\"style\":\"knob\"}],\"init\":\"480\",\"min\":\"180\",\"max\":\"720\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Resonance\",\"address\":\"/Harp/Parameters/Resonance\",\"index\":\"131152\",\"meta\":[{\"2\":\"\"},{\"acc\":\"2 1 -12 0 10\"},{\"style\":\"knob\"}],\"init\":\"5\",\"min\":\"0.1\",\"max\":\"10\",\"step\":\"0.01\"}]},{\"type\":\"hgroup\",\"label\":\"Reverb\",\"meta\":[{\"3\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Reverberation Volume(InstrReverb)\",\"address\":\"/Harp/Reverb/Reverberation_Volume(InstrReverb)\",\"index\":\"147364\",\"meta\":[{\"1\":\"\"},{\"acc\":\"1 1 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.2\",\"min\":\"0.05\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Reverberation Room Size (InstrReverb)\",\"address\":\"/Harp/Reverb/Reverberation_Room_Size_(InstrReverb)\",\"index\":\"32\",\"meta\":[{\"2\":\"\"},{\"acc\":\"1 1 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.2\",\"min\":\"0.05\",\"max\":\"1.3\",\"step\":\"0.01\"}]}]}]}";
}
function getBase64CodePentatonicDryHarp() { return "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bWVzIjpbIi4iLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0IiwiL3Vzci9zaGFyZS9mYXVzdCIsIi9Eb2N1bWVudHMvZmF1c3R3ZWJzaXRlLWdpdGh1Yi9tb2R1bGVzLXdvcmtsZXQiXSwic2l6ZSI6Ijg3Njk0MCIsImlucHV0cyI6IjAiLCJvdXRwdXRzIjoiMiIsIm1ldGEiOlt7ImF1dGhvciI6IkVSIn0seyJiYXNpY3MubGliL25hbWUiOiJGYXVzdCBCYXNpYyBFbGVtZW50IExpYnJhcnkifSx7ImJhc2ljcy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsiZGVsYXlzLmxpYi9uYW1lIjoiRmF1c3QgRGVsYXkgTGlicmFyeSJ9LHsiZGVsYXlzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJmaWxlbmFtZSI6IlBlbnRhdG9uaWNEcnlIYXJwIn0seyJmaWx0ZXJzLmxpYi9uYW1lIjoiRmF1c3QgRmlsdGVycyBMaWJyYXJ5In0seyJmaWx0ZXJzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJtYXRocy5saWIvYXV0aG9yIjoiR1JBTUUifSx7Im1hdGhzLmxpYi9jb3B5cmlnaHQiOiJHUkFNRSJ9LHsibWF0aHMubGliL2xpY2Vuc2UiOiJMR1BMIHdpdGggZXhjZXB0aW9uIn0seyJtYXRocy5saWIvbmFtZSI6IkZhdXN0IE1hdGggTGlicmFyeSJ9LHsibWF0aHMubGliL3ZlcnNpb24iOiIyLjEifSx7Im5hbWUiOiJQZW50YXRvbmljRHJ5SGFycCJ9LHsibm9pc2VzLmxpYi9uYW1lIjoiRmF1c3QgTm9pc2UgR2VuZXJhdG9yIExpYnJhcnkifSx7Im5vaXNlcy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsicmV2ZXJicy5saWIvbmFtZSI6IkZhdXN0IFJldmVyYiBMaWJyYXJ5In0seyJyZXZlcmJzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJyb3V0ZXMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJyb3V0ZXMubGliL3ZlcnNpb24iOiIwLjAifSx7InNpZ25hbHMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJzaWduYWxzLmxpYi92ZXJzaW9uIjoiMC4wIn1dLCJ1aSI6W3sidHlwZSI6InZncm91cCIsImxhYmVsIjoiSGFycCIsIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiSW5zdHJ1bWVudCBIYW5kIiwiYWRkcmVzcyI6Ii9IYXJwL0luc3RydW1lbnRfSGFuZCIsImluZGV4IjoiMTMxMjYwIiwibWV0YSI6W3siMSI6IiJ9LHsiYWNjIjoiMCAxIC0xMCAwIDEwIn1dLCJpbml0IjoiMTEiLCJtaW4iOiIwIiwibWF4IjoiMjEiLCJzdGVwIjoiMSJ9LHsidHlwZSI6Imhncm91cCIsImxhYmVsIjoiUGFyYW1ldGVycyIsIm1ldGEiOlt7IjIiOiIifV0sIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiU3BlZWQiLCJhZGRyZXNzIjoiL0hhcnAvUGFyYW1ldGVycy9TcGVlZCIsImluZGV4IjoiMTMxMjMyIiwibWV0YSI6W3siMSI6IiJ9LHsiYWNjIjoiMCAxIC0xMiAwIDEwIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiI0ODAiLCJtaW4iOiIxODAiLCJtYXgiOiI3MjAiLCJzdGVwIjoiMSJ9LHsidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IlJlc29uYW5jZSIsImFkZHJlc3MiOiIvSGFycC9QYXJhbWV0ZXJzL1Jlc29uYW5jZSIsImluZGV4IjoiMTMxMTUyIiwibWV0YSI6W3siMiI6IiJ9LHsiYWNjIjoiMiAxIC0xMiAwIDEwIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiI1IiwibWluIjoiMC4xIiwibWF4IjoiMTAiLCJzdGVwIjoiMC4wMSJ9XX0seyJ0eXBlIjoiaGdyb3VwIiwibGFiZWwiOiJSZXZlcmIiLCJtZXRhIjpbeyIzIjoiIn1dLCJpdGVtcyI6W3sidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IlJldmVyYmVyYXRpb24gVm9sdW1lKEluc3RyUmV2ZXJiKSIsImFkZHJlc3MiOiIvSGFycC9SZXZlcmIvUmV2ZXJiZXJhdGlvbl9Wb2x1bWUoSW5zdHJSZXZlcmIpIiwiaW5kZXgiOiIxNDczNjQiLCJtZXRhIjpbeyIxIjoiIn0seyJhY2MiOiIxIDEgLTEwIDAgMTAifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjAuMiIsIm1pbiI6IjAuMDUiLCJtYXgiOiIxIiwic3RlcCI6IjAuMDEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJSZXZlcmJlcmF0aW9uIFJvb20gU2l6ZSAoSW5zdHJSZXZlcmIpIiwiYWRkcmVzcyI6Ii9IYXJwL1JldmVyYi9SZXZlcmJlcmF0aW9uX1Jvb21fU2l6ZV8oSW5zdHJSZXZlcmIpIiwiaW5kZXgiOiIzMiIsIm1ldGEiOlt7IjIiOiIifSx7ImFjYyI6IjEgMSAtMTAgMCAxMCJ9LHsic3R5bGUiOiJrbm9iIn1dLCJpbml0IjoiMC4yIiwibWluIjoiMC4wNSIsIm1heCI6IjEuMyIsInN0ZXAiOiIwLjAxIn1dfV19XX0="; }

/*
 faust2wasm: GRAME 2017-2018
*/
 
'use strict';

// Monophonic Faust DSP
class PentatonicDryHarpProcessor extends AudioWorkletProcessor {
    
    // JSON parsing functions
    static parse_ui(ui, obj, callback)
    {
        for (var i = 0; i < ui.length; i++) {
            PentatonicDryHarpProcessor.parse_group(ui[i], obj, callback);
        }
    }
    
    static parse_group(group, obj, callback)
    {
        if (group.items) {
            PentatonicDryHarpProcessor.parse_items(group.items, obj, callback);
        }
    }
    
    static parse_items(items, obj, callback)
    {
        for (var i = 0; i < items.length; i++) {
            callback(items[i], obj, callback);
        }
    }
    
    static parse_item1(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            PentatonicDryHarpProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Nothing
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            obj.push({ name: item.address,
                     defaultValue: item.init,
                     minValue: item.min,
                     maxValue: item.max });
        }
    }
    
    static parse_item2(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            PentatonicDryHarpProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Keep bargraph adresses
            obj.outputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "soundfile") {
            // Keep soundfile adresses
            obj.soundfile_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            // Keep inputs adresses
            obj.inputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        }
    }
    
    static b64ToUint6(nChr)
    {
        return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
        nChr - 71
        : nChr > 47 && nChr < 58 ?
        nChr + 4
        : nChr === 43 ?
        62
        : nChr === 47 ?
        63
        :
        0;
    }
    
    static atob(sBase64, nBlocksSize)
    {
        if (typeof atob === 'function') {
            return atob(sBase64);
        } else {
            
            var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
            var nInLen = sB64Enc.length;
            var nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;
            var taBytes = new Uint8Array(nOutLen);
            
            for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
                nMod4 = nInIdx & 3;
                nUint24 |= PentatonicDryHarpProcessor.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
                if (nMod4 === 3 || nInLen - nInIdx === 1) {
                    for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
                    }
                    nUint24 = 0;
                }
            }
            return taBytes.buffer;
        }
    }
   
    static get parameterDescriptors () 
    {
        // Analyse JSON to generate AudioParam parameters
        var params = [];
        PentatonicDryHarpProcessor.parse_ui(JSON.parse(getJSONPentatonicDryHarp()).ui, params, PentatonicDryHarpProcessor.parse_item1);
        return params;
    }
    
    constructor(options)
    {
        super(options);
      
        this.json_object = JSON.parse(getJSONPentatonicDryHarp());

        this.output_handler = function(path, value) { this.port.postMessage({ path: path, value: value }); };
        
        this.ins = null;
        this.outs = null;

        this.dspInChannnels = [];
        this.dspOutChannnels = [];

        this.numIn = parseInt(this.json_object.inputs);
        this.numOut = parseInt(this.json_object.outputs);

        // Memory allocator
        this.ptr_size = 4;
        this.sample_size = 4;
        this.integer_size = 4;
        
        this.PentatonicDryHarp_instance = new WebAssembly.Instance(PentatonicDryHarpProcessor.wasm_module, PentatonicDryHarpProcessor.importObject);
  	   	this.factory = this.PentatonicDryHarp_instance.exports;
        this.HEAP = this.PentatonicDryHarp_instance.exports.memory.buffer;
        this.HEAP32 = new Int32Array(this.HEAP);
        this.HEAPF32 = new Float32Array(this.HEAP);

        //console.log(this.HEAP);
        //console.log(this.HEAP32);
        //console.log(this.HEAPF32);

        // bargraph
        this.outputs_timer = 5;
        this.outputs_items = [];

        // input items
        this.inputs_items = [];
        
        // soundfile items
        this.soundfile_items = [];

        // Start of HEAP index

        // DSP is placed first with index 0. Audio buffer start at the end of DSP.
        this.audio_heap_ptr = parseInt(this.json_object.size);

        // Setup pointers offset
        this.audio_heap_ptr_inputs = this.audio_heap_ptr;
        this.audio_heap_ptr_outputs = this.audio_heap_ptr_inputs + (this.numIn * this.ptr_size);

        // Setup buffer offset
        this.audio_heap_inputs = this.audio_heap_ptr_outputs + (this.numOut * this.ptr_size);
        this.audio_heap_outputs = this.audio_heap_inputs + (this.numIn * PentatonicDryHarpProcessor.buffer_size * this.sample_size);
        
        // Start of DSP memory : DSP is placed first with index 0
        this.dsp = 0;

        this.pathTable = [];
     
        // Send output values to the AudioNode
        this.update_outputs = function ()
        {
            if (this.outputs_items.length > 0 && this.output_handler && this.outputs_timer-- === 0) {
                this.outputs_timer = 5;
                for (var i = 0; i < this.outputs_items.length; i++) {
                    this.output_handler(this.outputs_items[i], this.HEAPF32[this.pathTable[this.outputs_items[i]] >> 2]);
                }
            }
        }
        
        this.loadFile = function (sound_index, sound_ptr, length, sample_rate, channels, buffers)
        {
            /*
             Soundfile layout:
            
                FAUSTFLOAT** fBuffers;
                int fLength;
                int fSampleRate;
                int fChannels;
             
                ===========
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                ===========
            */
            
            var size_of_soundfile = this.ptr_size + (this.integer_size * 3);  // fBuffers, fLength, fSampleRate, fChannels
            
            //console.log("sound_ptr " + sound_ptr);
            //console.log("size_of_soundfile " + size_of_soundfile);
            
            // end of sounfile
            var end_of_soundfile_ptr = sound_ptr + size_of_soundfile;
            
            this.HEAP32[sound_ptr >> 2] = end_of_soundfile_ptr;
            this.HEAP32[(sound_ptr + 4) >> 2] = length;      // fLength
            this.HEAP32[(sound_ptr + 8) >> 2] = sample_rate; // fSampleRate
            this.HEAP32[(sound_ptr + 12) >> 2] = channels;   // fChannels
            
            //console.log("end_of_soundfile_ptr " + end_of_soundfile_ptr);
            
            // Setup soundfile pointers
            var start_of_soundfile_data_ptr = end_of_soundfile_ptr + this.ptr_size * channels;
            
            for (var i = 0; i < channels; i++) {
                this.HEAP32[(end_of_soundfile_ptr + (i * this.ptr_size)) >> 2] = start_of_soundfile_data_ptr + (i * length * this.sample_size);
            }
            
            // Setup soundfile buffer
            for (var i = 0; i < channels; i++) {
                
                // start of sound buffer
                var start_of_buffer_ptr = start_of_soundfile_data_ptr + (i * length * this.sample_size);
                
                // generate a 440 Hz signal
                for (var j = 0; j < length; j++) {
                    this.HEAPF32[(start_of_buffer_ptr + (j * this.sample_size)) >> 2] = 0.8 * Math.sin((j/length)*2*Math.PI);
                }
            }
            
            // Setup fSoundfile fields in the DSP structure
            //console.log("sound_index " + sound_index);
            //console.log("this.pathTable[this.soundfile_items[sound_index]] " + this.pathTable[this.soundfile_items[sound_index]]);
            
            this.HEAP32[this.pathTable[this.soundfile_items[sound_index]] >> 2] = sound_ptr;
            
            /*
            console.log("start_of_soundfile_data_ptr " + start_of_soundfile_data_ptr);
            console.log("length " + length);
            console.log("channels " + channels);
            console.log("this.sample_size " + this.sample_size);
            console.log("END " + (start_of_soundfile_data_ptr + (channels * length * this.sample_size)));
            */
            
            // End of buffer data;
            return start_of_soundfile_data_ptr + (channels * length * this.sample_size);
        }
        
        this.initAux = function ()
        {
            var i;
            
            if (this.numIn > 0) {
                this.ins = this.audio_heap_ptr_inputs;
                for (i = 0; i < this.numIn; i++) {
                    this.HEAP32[(this.ins >> 2) + i] = this.audio_heap_inputs + ((PentatonicDryHarpProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Ins buffer tables
                var dspInChans = this.HEAP32.subarray(this.ins >> 2, (this.ins + this.numIn * this.ptr_size) >> 2);
                for (i = 0; i < this.numIn; i++) {
                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + PentatonicDryHarpProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            if (this.numOut > 0) {
                this.outs = this.audio_heap_ptr_outputs;
                for (i = 0; i < this.numOut; i++) {
                    this.HEAP32[(this.outs >> 2) + i] = this.audio_heap_outputs + ((PentatonicDryHarpProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Out buffer tables
                var dspOutChans = this.HEAP32.subarray(this.outs >> 2, (this.outs + this.numOut * this.ptr_size) >> 2);
                for (i = 0; i < this.numOut; i++) {
                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + PentatonicDryHarpProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            // Parse UI
            PentatonicDryHarpProcessor.parse_ui(this.json_object.ui, this, PentatonicDryHarpProcessor.parse_item2);
            
            /*
            console.log("soundfile_items.length " + this.soundfile_items.length);
            
            // Setup soundfile offset (after audio data)
            this.soundfile_ptr = this.audio_heap_outputs + (this.numOut * PentatonicDryHarpProcessor.buffer_size * this.sample_size);
            
            var sound_ptr1 = this.soundfile_ptr;
            var sound_ptr2 = this.loadFile(0, sound_ptr1, 44100/700, 44100, 2, null);
            var sound_ptr3 = this.loadFile(1, sound_ptr2, 44100/500, 44100, 2, null);
            */
             
            // Init DSP
            this.factory.init(this.dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope  
        }

        this.setParamValue = function (path, val)
        {
            this.HEAPF32[this.pathTable[path]] = val;
        }

        this.getParamValue = function (path)
        {
            return this.HEAPF32[this.pathTable[path]];
        }

        // Init resulting DSP
        this.initAux();
    }
    
    process(inputs, outputs, parameters) 
    {
        var input = inputs[0];
        var output = outputs[0];
        
        // Check inputs
        if (this.numIn > 0 && ((input === undefined) || (input[0].length === 0))) {
            //console.log("Process input error");
            return true;
        }
        // Check outputs
        if (this.numOut > 0 && ((output === undefined) || (output[0].length === 0))) {
            //console.log("Process output error");
            return true;
        }
        
        // Copy inputs
        if (input !== undefined) {
            for (var chan = 0; chan < Math.min(this.numIn, input.length) ; ++chan) {
                var dspInput = this.dspInChannnels[chan];
                dspInput.set(input[chan]);
            }
        }
        
        // Update controls (possibly needed for sample accurate control)
        var params = Object.entries(parameters);
        for (var i = 0; i < params.length; i++) {
            this.HEAPF32[this.pathTable[params[i][0]] >> 2] = params[i][1][0];
        }
        
        // Compute
        this.factory.compute(this.dsp, PentatonicDryHarpProcessor.buffer_size, this.ins, this.outs);
        
        // Update bargraph
        this.update_outputs();
        
        // Copy outputs
        if (output !== undefined) {
            for (var chan = 0; chan < Math.min(this.numOut, output.length); ++chan) {
                var dspOutput = this.dspOutChannnels[chan];
                output[chan].set(dspOutput);
            }
        }
        
        return true;
    }
}

// Globals

PentatonicDryHarpProcessor.buffer_size = 128;

PentatonicDryHarpProcessor.importObject = {
    env: {
        memoryBase: 0,
        tableBase: 0,
            
        // Integer version
        _abs: Math.abs,
        
        // Float version
        _acosf: Math.acos,
        _asinf: Math.asin,
        _atanf: Math.atan,
        _atan2f: Math.atan2,
        _ceilf: Math.ceil,
        _cosf: Math.cos,
        _expf: Math.exp,
        _floorf: Math.floor,
        _fmodf: function(x, y) { return x % y; },
        _logf: Math.log,
        _log10f: Math.log10,
        _max_f: Math.max,
        _min_f: Math.min,
        _remainderf: function(x, y) { return x - Math.round(x/y) * y; },
        _powf: Math.pow,
        _roundf: Math.fround,
        _sinf: Math.sin,
        _sqrtf: Math.sqrt,
        _tanf: Math.tan,
           
        // Double version
        _acos: Math.acos,
        _asin: Math.asin,
        _atan: Math.atan,
        _atan2: Math.atan2,
        _ceil: Math.ceil,
        _cos: Math.cos,
        _exp: Math.exp,
        _floor: Math.floor,
        _fmod: function(x, y) { return x % y; },
        _log: Math.log,
        _log10: Math.log10,
        _max_: Math.max,
        _min_: Math.min,
        _remainder:function(x, y) { return x - Math.round(x/y) * y; },
        _pow: Math.pow,
        _round: Math.fround,
        _sin: Math.sin,
        _sqrt: Math.sqrt,
        _tan: Math.tan,
        
        table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })
    }
};

// Synchronously compile and instantiate the WASM module
try {
    if (PentatonicDryHarpProcessor.wasm_module == undefined) {
        PentatonicDryHarpProcessor.wasm_module = new WebAssembly.Module(PentatonicDryHarpProcessor.atob(getBase64CodePentatonicDryHarp()));
        registerProcessor('PentatonicDryHarp', PentatonicDryHarpProcessor);
    }
} catch (e) {
    console.log(e); console.log("Faust PentatonicDryHarp cannot be loaded or compiled");
}

