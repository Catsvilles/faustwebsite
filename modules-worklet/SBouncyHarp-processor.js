
/*
Code generated with Faust version 2.11.5
Compilation options: wasm-ib, -scal -ftz 2
*/

function getJSONSBouncyHarp() {
	return "{\"name\":\"Bouncy Harp\",\"filename\":\"SBouncyHarp\",\"version\":\"2.11.5\",\"compile_options\":\"-scal -ftz 2\",\"library_list\":[\"/usr/local/share/faust/stdfaust.lib\",\"/usr/local/share/faust/signals.lib\",\"/usr/local/share/faust/maths.lib\",\"/usr/local/share/faust/noises.lib\",\"/usr/local/share/faust/filters.lib\",\"/usr/local/share/faust/delays.lib\",\"/usr/local/share/faust/basics.lib\"],\"include_pathnames\":[\".\",\"/usr/local/share/faust\",\"/usr/share/faust\"],\"size\":\"983808\",\"inputs\":\"0\",\"outputs\":\"1\",\"meta\":[{\"author\":\"ER\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"filename\":\"SBouncyHarp\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Bouncy Harp\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"Bouncy Harp\",\"items\":[{\"type\":\"hslider\",\"label\":\"Hight\",\"address\":\"/Bouncy_Harp/Hight\",\"index\":\"36\",\"meta\":[{\"acc\":\"2 1 -10 0 10\"}],\"init\":\"3\",\"min\":\"1\",\"max\":\"6\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"Instrument Hand\",\"address\":\"/Bouncy_Harp/Instrument_Hand\",\"index\":\"12\",\"meta\":[{\"1\":\"\"},{\"acc\":\"1 0 -8 0 11\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"15\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Dry/Soft Strings\",\"address\":\"/Bouncy_Harp/Dry/Soft_Strings\",\"index\":\"0\",\"meta\":[{\"3\":\"\"},{\"acc\":\"2 1 -10 0 10\"}],\"init\":\"0.45\",\"min\":\"0\",\"max\":\"0.9\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"Picking Position\",\"address\":\"/Bouncy_Harp/Picking_Position\",\"index\":\"32828\",\"meta\":[{\"4\":\"\"},{\"acc\":\"2 1 -10 0 10\"}],\"init\":\"0.13\",\"min\":\"0.02\",\"max\":\"0.5\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Resonance (InstrReverb)\",\"address\":\"/Bouncy_Harp/Resonance_(InstrReverb)\",\"index\":\"32844\",\"meta\":[{\"5\":\"\"},{\"acc\":\"1 1 -10 0 10\"}],\"init\":\"5\",\"min\":\"0.5\",\"max\":\"10\",\"step\":\"0.01\"}]}]}";
}
function getBase64CodeSBouncyHarp() { return "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gAABAEEAC70QeyJuYW1lIjoiQm91bmN5IEhhcnAiLCJmaWxlbmFtZSI6IlNCb3VuY3lIYXJwIiwidmVyc2lvbiI6IjIuMTEuNSIsImNvbXBpbGVfb3B0aW9ucyI6Ii1zY2FsIC1mdHogMiIsImxpYnJhcnlfbGlzdCI6WyIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L3N0ZGZhdXN0LmxpYiIsIi91c3IvbG9jYWwvc2hhcmUvZmF1c3Qvc2lnbmFscy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L21hdGhzLmxpYiIsIi91c3IvbG9jYWwvc2hhcmUvZmF1c3Qvbm9pc2VzLmxpYiIsIi91c3IvbG9jYWwvc2hhcmUvZmF1c3QvZmlsdGVycy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L2RlbGF5cy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L2Jhc2ljcy5saWIiXSwiaW5jbHVkZV9wYXRobmFtZXMiOlsiLiIsIi91c3IvbG9jYWwvc2hhcmUvZmF1c3QiLCIvdXNyL3NoYXJlL2ZhdXN0Il0sInNpemUiOiI5ODM4MDgiLCJpbnB1dHMiOiIwIiwib3V0cHV0cyI6IjEiLCJtZXRhIjpbeyJhdXRob3IiOiJFUiJ9LHsiYmFzaWNzLmxpYi9uYW1lIjoiRmF1c3QgQmFzaWMgRWxlbWVudCBMaWJyYXJ5In0seyJiYXNpY3MubGliL3ZlcnNpb24iOiIwLjAifSx7ImRlbGF5cy5saWIvbmFtZSI6IkZhdXN0IERlbGF5IExpYnJhcnkifSx7ImRlbGF5cy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsiZmlsZW5hbWUiOiJTQm91bmN5SGFycCJ9LHsiZmlsdGVycy5saWIvbmFtZSI6IkZhdXN0IEZpbHRlcnMgTGlicmFyeSJ9LHsiZmlsdGVycy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsibWF0aHMubGliL2F1dGhvciI6IkdSQU1FIn0seyJtYXRocy5saWIvY29weXJpZ2h0IjoiR1JBTUUifSx7Im1hdGhzLmxpYi9saWNlbnNlIjoiTEdQTCB3aXRoIGV4Y2VwdGlvbiJ9LHsibWF0aHMubGliL25hbWUiOiJGYXVzdCBNYXRoIExpYnJhcnkifSx7Im1hdGhzLmxpYi92ZXJzaW9uIjoiMi4xIn0seyJuYW1lIjoiQm91bmN5IEhhcnAifSx7Im5vaXNlcy5saWIvbmFtZSI6IkZhdXN0IE5vaXNlIEdlbmVyYXRvciBMaWJyYXJ5In0seyJub2lzZXMubGliL3ZlcnNpb24iOiIwLjAifSx7InNpZ25hbHMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJzaWduYWxzLmxpYi92ZXJzaW9uIjoiMC4wIn1dLCJ1aSI6W3sidHlwZSI6InZncm91cCIsImxhYmVsIjoiQm91bmN5IEhhcnAiLCJpdGVtcyI6W3sidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IkhpZ2h0IiwiYWRkcmVzcyI6Ii9Cb3VuY3lfSGFycC9IaWdodCIsImluZGV4IjoiMzYiLCJtZXRhIjpbeyJhY2MiOiIyIDEgLTEwIDAgMTAifV0sImluaXQiOiIzIiwibWluIjoiMSIsIm1heCI6IjYiLCJzdGVwIjoiMC4xIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiSW5zdHJ1bWVudCBIYW5kIiwiYWRkcmVzcyI6Ii9Cb3VuY3lfSGFycC9JbnN0cnVtZW50X0hhbmQiLCJpbmRleCI6IjEyIiwibWV0YSI6W3siMSI6IiJ9LHsiYWNjIjoiMSAwIC04IDAgMTEifV0sImluaXQiOiIwIiwibWluIjoiMCIsIm1heCI6IjE1Iiwic3RlcCI6IjEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJEcnkvU29mdCBTdHJpbmdzIiwiYWRkcmVzcyI6Ii9Cb3VuY3lfSGFycC9EcnkvU29mdF9TdHJpbmdzIiwiaW5kZXgiOiIwIiwibWV0YSI6W3siMyI6IiJ9LHsiYWNjIjoiMiAxIC0xMCAwIDEwIn1dLCJpbml0IjoiMC40NSIsIm1pbiI6IjAiLCJtYXgiOiIwLjkiLCJzdGVwIjoiMC4xIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUGlja2luZyBQb3NpdGlvbiIsImFkZHJlc3MiOiIvQm91bmN5X0hhcnAvUGlja2luZ19Qb3NpdGlvbiIsImluZGV4IjoiMzI4MjgiLCJtZXRhIjpbeyI0IjoiIn0seyJhY2MiOiIyIDEgLTEwIDAgMTAifV0sImluaXQiOiIwLjEzIiwibWluIjoiMC4wMiIsIm1heCI6IjAuNSIsInN0ZXAiOiIwLjAxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUmVzb25hbmNlIChJbnN0clJldmVyYikiLCJhZGRyZXNzIjoiL0JvdW5jeV9IYXJwL1Jlc29uYW5jZV8oSW5zdHJSZXZlcmIpIiwiaW5kZXgiOiIzMjg0NCIsIm1ldGEiOlt7IjUiOiIifSx7ImFjYyI6IjEgMSAtMTAgMCAxMCJ9XSwiaW5pdCI6IjUiLCJtaW4iOiIwLjUiLCJtYXgiOiIxMCIsInN0ZXAiOiIwLjAxIn1dfV19"; }

/*
 faust2wasm: GRAME 2017-2018
*/
 
'use strict';

// Monophonic Faust DSP
class SBouncyHarpProcessor extends AudioWorkletProcessor {
    
    // JSON parsing functions
    static parse_ui(ui, obj, callback)
    {
        for (var i = 0; i < ui.length; i++) {
            SBouncyHarpProcessor.parse_group(ui[i], obj, callback);
        }
    }
    
    static parse_group(group, obj, callback)
    {
        if (group.items) {
            SBouncyHarpProcessor.parse_items(group.items, obj, callback);
        }
    }
    
    static parse_items(items, obj, callback)
    {
        for (var i = 0; i < items.length; i++) {
            callback(items[i], obj, callback);
        }
    }
    
    static parse_item1(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            SBouncyHarpProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Nothing
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            obj.push({ name: item.address,
                     defaultValue: item.init,
                     minValue: item.min,
                     maxValue: item.max });
        }
    }
    
    static parse_item2(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            SBouncyHarpProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Keep bargraph adresses
            obj.outputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "soundfile") {
            // Keep soundfile adresses
            obj.soundfile_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            // Keep inputs adresses
            obj.inputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        }
    }
    
    static b64ToUint6(nChr)
    {
        return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
        nChr - 71
        : nChr > 47 && nChr < 58 ?
        nChr + 4
        : nChr === 43 ?
        62
        : nChr === 47 ?
        63
        :
        0;
    }
    
    static atob(sBase64, nBlocksSize)
    {
        if (typeof atob === 'function') {
            return atob(sBase64);
        } else {
            
            var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
            var nInLen = sB64Enc.length;
            var nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;
            var taBytes = new Uint8Array(nOutLen);
            
            for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
                nMod4 = nInIdx & 3;
                nUint24 |= SBouncyHarpProcessor.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
                if (nMod4 === 3 || nInLen - nInIdx === 1) {
                    for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
                    }
                    nUint24 = 0;
                }
            }
            return taBytes.buffer;
        }
    }
   
    static get parameterDescriptors () 
    {
        // Analyse JSON to generate AudioParam parameters
        var params = [];
        SBouncyHarpProcessor.parse_ui(JSON.parse(getJSONSBouncyHarp()).ui, params, SBouncyHarpProcessor.parse_item1);
        return params;
    }
    
    constructor(options)
    {
        super(options);
      
        this.json_object = JSON.parse(getJSONSBouncyHarp());

        this.output_handler = function(path, value) { this.port.postMessage({ path: path, value: value }); };
        
        this.ins = null;
        this.outs = null;

        this.dspInChannnels = [];
        this.dspOutChannnels = [];

        this.numIn = parseInt(this.json_object.inputs);
        this.numOut = parseInt(this.json_object.outputs);

        // Memory allocator
        this.ptr_size = 4;
        this.sample_size = 4;
        this.integer_size = 4;
        
        this.SBouncyHarp_instance = new WebAssembly.Instance(SBouncyHarpProcessor.wasm_module, SBouncyHarpProcessor.importObject);
  	   	this.factory = this.SBouncyHarp_instance.exports;
        this.HEAP = this.SBouncyHarp_instance.exports.memory.buffer;
        this.HEAP32 = new Int32Array(this.HEAP);
        this.HEAPF32 = new Float32Array(this.HEAP);

        //console.log(this.HEAP);
        //console.log(this.HEAP32);
        //console.log(this.HEAPF32);

        // bargraph
        this.outputs_timer = 5;
        this.outputs_items = [];

        // input items
        this.inputs_items = [];
        
        // soundfile items
        this.soundfile_items = [];

        // Start of HEAP index

        // DSP is placed first with index 0. Audio buffer start at the end of DSP.
        this.audio_heap_ptr = parseInt(this.json_object.size);

        // Setup pointers offset
        this.audio_heap_ptr_inputs = this.audio_heap_ptr;
        this.audio_heap_ptr_outputs = this.audio_heap_ptr_inputs + (this.numIn * this.ptr_size);

        // Setup buffer offset
        this.audio_heap_inputs = this.audio_heap_ptr_outputs + (this.numOut * this.ptr_size);
        this.audio_heap_outputs = this.audio_heap_inputs + (this.numIn * SBouncyHarpProcessor.buffer_size * this.sample_size);
        
        // Start of DSP memory : DSP is placed first with index 0
        this.dsp = 0;

        this.pathTable = [];
     
        // Send output values to the AudioNode
        this.update_outputs = function ()
        {
            if (this.outputs_items.length > 0 && this.output_handler && this.outputs_timer-- === 0) {
                this.outputs_timer = 5;
                for (var i = 0; i < this.outputs_items.length; i++) {
                    this.output_handler(this.outputs_items[i], this.HEAPF32[this.pathTable[this.outputs_items[i]] >> 2]);
                }
            }
        }
        
        this.loadFile = function (sound_index, sound_ptr, length, sample_rate, channels, buffers)
        {
            /*
             Soundfile layout:
            
                FAUSTFLOAT** fBuffers;
                int fLength;
                int fSampleRate;
                int fChannels;
             
                ===========
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                ===========
            */
            
            var size_of_soundfile = this.ptr_size + (this.integer_size * 3);  // fBuffers, fLength, fSampleRate, fChannels
            
            //console.log("sound_ptr " + sound_ptr);
            //console.log("size_of_soundfile " + size_of_soundfile);
            
            // end of sounfile
            var end_of_soundfile_ptr = sound_ptr + size_of_soundfile;
            
            this.HEAP32[sound_ptr >> 2] = end_of_soundfile_ptr;
            this.HEAP32[(sound_ptr + 4) >> 2] = length;      // fLength
            this.HEAP32[(sound_ptr + 8) >> 2] = sample_rate; // fSampleRate
            this.HEAP32[(sound_ptr + 12) >> 2] = channels;   // fChannels
            
            //console.log("end_of_soundfile_ptr " + end_of_soundfile_ptr);
            
            // Setup soundfile pointers
            var start_of_soundfile_data_ptr = end_of_soundfile_ptr + this.ptr_size * channels;
            
            for (var i = 0; i < channels; i++) {
                this.HEAP32[(end_of_soundfile_ptr + (i * this.ptr_size)) >> 2] = start_of_soundfile_data_ptr + (i * length * this.sample_size);
            }
            
            // Setup soundfile buffer
            for (var i = 0; i < channels; i++) {
                
                // start of sound buffer
                var start_of_buffer_ptr = start_of_soundfile_data_ptr + (i * length * this.sample_size);
                
                // generate a 440 Hz signal
                for (var j = 0; j < length; j++) {
                    this.HEAPF32[(start_of_buffer_ptr + (j * this.sample_size)) >> 2] = 0.8 * Math.sin((j/length)*2*Math.PI);
                }
            }
            
            // Setup fSoundfile fields in the DSP structure
            //console.log("sound_index " + sound_index);
            //console.log("this.pathTable[this.soundfile_items[sound_index]] " + this.pathTable[this.soundfile_items[sound_index]]);
            
            this.HEAP32[this.pathTable[this.soundfile_items[sound_index]] >> 2] = sound_ptr;
            
            /*
            console.log("start_of_soundfile_data_ptr " + start_of_soundfile_data_ptr);
            console.log("length " + length);
            console.log("channels " + channels);
            console.log("this.sample_size " + this.sample_size);
            console.log("END " + (start_of_soundfile_data_ptr + (channels * length * this.sample_size)));
            */
            
            // End of buffer data;
            return start_of_soundfile_data_ptr + (channels * length * this.sample_size);
        }
        
        this.initAux = function ()
        {
            var i;
            
            if (this.numIn > 0) {
                this.ins = this.audio_heap_ptr_inputs;
                for (i = 0; i < this.numIn; i++) {
                    this.HEAP32[(this.ins >> 2) + i] = this.audio_heap_inputs + ((SBouncyHarpProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Ins buffer tables
                var dspInChans = this.HEAP32.subarray(this.ins >> 2, (this.ins + this.numIn * this.ptr_size) >> 2);
                for (i = 0; i < this.numIn; i++) {
                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + SBouncyHarpProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            if (this.numOut > 0) {
                this.outs = this.audio_heap_ptr_outputs;
                for (i = 0; i < this.numOut; i++) {
                    this.HEAP32[(this.outs >> 2) + i] = this.audio_heap_outputs + ((SBouncyHarpProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Out buffer tables
                var dspOutChans = this.HEAP32.subarray(this.outs >> 2, (this.outs + this.numOut * this.ptr_size) >> 2);
                for (i = 0; i < this.numOut; i++) {
                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + SBouncyHarpProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            // Parse UI
            SBouncyHarpProcessor.parse_ui(this.json_object.ui, this, SBouncyHarpProcessor.parse_item2);
            
            /*
            console.log("soundfile_items.length " + this.soundfile_items.length);
            
            // Setup soundfile offset (after audio data)
            this.soundfile_ptr = this.audio_heap_outputs + (this.numOut * SBouncyHarpProcessor.buffer_size * this.sample_size);
            
            var sound_ptr1 = this.soundfile_ptr;
            var sound_ptr2 = this.loadFile(0, sound_ptr1, 44100/700, 44100, 2, null);
            var sound_ptr3 = this.loadFile(1, sound_ptr2, 44100/500, 44100, 2, null);
            */
             
            // Init DSP
            this.factory.init(this.dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope  
        }

        this.setParamValue = function (path, val)
        {
            this.HEAPF32[this.pathTable[path]] = val;
        }

        this.getParamValue = function (path)
        {
            return this.HEAPF32[this.pathTable[path]];
        }

        // Init resulting DSP
        this.initAux();
    }
    
    process(inputs, outputs, parameters) 
    {
        var input = inputs[0];
        var output = outputs[0];
        
        // Check inputs
        if (this.numIn > 0 && ((input === undefined) || (input[0].length === 0))) {
            //console.log("Process input error");
            return true;
        }
        // Check outputs
        if (this.numOut > 0 && ((output === undefined) || (output[0].length === 0))) {
            //console.log("Process output error");
            return true;
        }
        
        // Copy inputs
        if (input !== undefined) {
            for (var chan = 0; chan < Math.min(this.numIn, input.length) ; ++chan) {
                var dspInput = this.dspInChannnels[chan];
                dspInput.set(input[chan]);
            }
        }
        
        // Update controls (possibly needed for sample accurate control)
        var params = Object.entries(parameters);
        for (var i = 0; i < params.length; i++) {
            this.HEAPF32[this.pathTable[params[i][0]] >> 2] = params[i][1][0];
        }
        
        // Compute
        this.factory.compute(this.dsp, SBouncyHarpProcessor.buffer_size, this.ins, this.outs);
        
        // Update bargraph
        this.update_outputs();
        
        // Copy outputs
        if (output !== undefined) {
            for (var chan = 0; chan < Math.min(this.numOut, output.length); ++chan) {
                var dspOutput = this.dspOutChannnels[chan];
                output[chan].set(dspOutput);
            }
        }
        
        return true;
    }
}

// Globals

SBouncyHarpProcessor.buffer_size = 128;

SBouncyHarpProcessor.importObject = {
    env: {
        memoryBase: 0,
        tableBase: 0,
            
        // Integer version
        _abs: Math.abs,
        
        // Float version
        _acosf: Math.acos,
        _asinf: Math.asin,
        _atanf: Math.atan,
        _atan2f: Math.atan2,
        _ceilf: Math.ceil,
        _cosf: Math.cos,
        _expf: Math.exp,
        _floorf: Math.floor,
        _fmodf: function(x, y) { return x % y; },
        _logf: Math.log,
        _log10f: Math.log10,
        _max_f: Math.max,
        _min_f: Math.min,
        _remainderf: function(x, y) { return x - Math.round(x/y) * y; },
        _powf: Math.pow,
        _roundf: Math.fround,
        _sinf: Math.sin,
        _sqrtf: Math.sqrt,
        _tanf: Math.tan,
           
        // Double version
        _acos: Math.acos,
        _asin: Math.asin,
        _atan: Math.atan,
        _atan2: Math.atan2,
        _ceil: Math.ceil,
        _cos: Math.cos,
        _exp: Math.exp,
        _floor: Math.floor,
        _fmod: function(x, y) { return x % y; },
        _log: Math.log,
        _log10: Math.log10,
        _max_: Math.max,
        _min_: Math.min,
        _remainder:function(x, y) { return x - Math.round(x/y) * y; },
        _pow: Math.pow,
        _round: Math.fround,
        _sin: Math.sin,
        _sqrt: Math.sqrt,
        _tan: Math.tan,
        
        table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })
    }
};

// Synchronously compile and instantiate the WASM module
try {
    if (SBouncyHarpProcessor.wasm_module == undefined) {
        SBouncyHarpProcessor.wasm_module = new WebAssembly.Module(SBouncyHarpProcessor.atob(getBase64CodeSBouncyHarp()));
        registerProcessor('SBouncyHarp', SBouncyHarpProcessor);
    }
} catch (e) {
    console.log(e); console.log("Faust SBouncyHarp cannot be loaded or compiled");
}

