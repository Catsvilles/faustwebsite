
/*
Code generated with Faust version 2.11.10
Compilation options: wasm-ib, -scal -ftz 2
*/

function getJSONBirds() {
	return "{\"name\":\"bird\",\"filename\":\"Birds\",\"version\":\"2.11.10\",\"compile_options\":\"-scal -ftz 2\",\"library_list\":[\"/usr/local/share/faust/stdfaust.lib\",\"/usr/local/share/faust/basics.lib\",\"/usr/local/share/faust/signals.lib\",\"/usr/local/share/faust/maths.lib\",\"/usr/local/share/faust/noises.lib\",\"/usr/local/share/faust/filters.lib\",\"/usr/local/share/faust/oscillators.lib\",\"/usr/local/share/faust/reverbs.lib\",\"/usr/local/share/faust/delays.lib\",\"/usr/local/share/faust/routes.lib\"],\"include_pathnames\":[\".\",\"/usr/local/share/faust\",\"/usr/share/faust\",\"/Documents/faustwebsite-github/modules-worklet\"],\"size\":\"1238472\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"author\":\"Pierre Cochard\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"filename\":\"Birds\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"bird\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"reverbs.lib/name\":\"Faust Reverb Library\"},{\"reverbs.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"hgroup\",\"label\":\"Birds\",\"items\":[{\"type\":\"hslider\",\"label\":\"Speed (Granulator)\",\"address\":\"/Birds/Speed_(Granulator)\",\"index\":\"393392\",\"meta\":[{\"1\":\"\"},{\"acc\":\"0 1 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"240\",\"min\":\"120\",\"max\":\"480\",\"step\":\"0.1\"},{\"type\":\"hslider\",\"label\":\"Probability (Granulator)\",\"address\":\"/Birds/Probability_(Granulator)\",\"index\":\"393420\",\"meta\":[{\"2\":\"\"},{\"acc\":\"1 0 -10 0 10\"},{\"style\":\"knob\"},{\"unit\":\"%\"}],\"init\":\"50\",\"min\":\"25\",\"max\":\"100\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Proximity (InstrReverb)\",\"address\":\"/Birds/Proximity_(InstrReverb)\",\"index\":\"262160\",\"meta\":[{\"3\":\"\"},{\"acc\":\"1 0 -15 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.5\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.01\"}]}]}";
}
function getBase64CodeBirds() { return "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KgKogBCUQwAAAD+SjjgClIpLQQBDAAAARkMAAAAAQQAqAtiJR0EAKgKUikuTl5aoNgKYiktBAEMAAIBEQwAAAABBACoClIpLQwAAgL+Sl5aoNgKcyktBAEMAAAAAQQAqArSAEBAAQQAqAriAEEMAAIA/kpSTOAKIy0tBAEMAAAAAQQAqAqyAEBAAQQAqArCAEEMAAIA/kpSTOAKYy0sLkICAgAAAIAAgARAOIAAQECAAEA0LpoCAgAAAQQBDAAAAPzgCkIAQQQBDAABwQzgCsIEYQQBDAABIQjgCzIEYC42AgIAAACABIAAgACABSBsPC42AgIAAACAAIAEgACABSBsPC4yAgIAAACAAIAFqIAI4AgALC7aRgIAAAQBBAAuvEXsibmFtZSI6ImJpcmQiLCJmaWxlbmFtZSI6IkJpcmRzIiwidmVyc2lvbiI6IjIuMTEuMTAiLCJjb21waWxlX29wdGlvbnMiOiItc2NhbCAtZnR6IDIiLCJsaWJyYXJ5X2xpc3QiOlsiL3Vzci9sb2NhbC9zaGFyZS9mYXVzdC9zdGRmYXVzdC5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L2Jhc2ljcy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L3NpZ25hbHMubGliIiwiL3Vzci9sb2NhbC9zaGFyZS9mYXVzdC9tYXRocy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L25vaXNlcy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L2ZpbHRlcnMubGliIiwiL3Vzci9sb2NhbC9zaGFyZS9mYXVzdC9vc2NpbGxhdG9ycy5saWIiLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0L3JldmVyYnMubGliIiwiL3Vzci9sb2NhbC9zaGFyZS9mYXVzdC9kZWxheXMubGliIiwiL3Vzci9sb2NhbC9zaGFyZS9mYXVzdC9yb3V0ZXMubGliIl0sImluY2x1ZGVfcGF0aG5hbWVzIjpbIi4iLCIvdXNyL2xvY2FsL3NoYXJlL2ZhdXN0IiwiL3Vzci9zaGFyZS9mYXVzdCIsIi9Eb2N1bWVudHMvZmF1c3R3ZWJzaXRlLWdpdGh1Yi9tb2R1bGVzLXdvcmtsZXQiXSwic2l6ZSI6IjEyMzg0NzIiLCJpbnB1dHMiOiIwIiwib3V0cHV0cyI6IjIiLCJtZXRhIjpbeyJhdXRob3IiOiJQaWVycmUgQ29jaGFyZCJ9LHsiYmFzaWNzLmxpYi9uYW1lIjoiRmF1c3QgQmFzaWMgRWxlbWVudCBMaWJyYXJ5In0seyJiYXNpY3MubGliL3ZlcnNpb24iOiIwLjAifSx7ImRlbGF5cy5saWIvbmFtZSI6IkZhdXN0IERlbGF5IExpYnJhcnkifSx7ImRlbGF5cy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsiZmlsZW5hbWUiOiJCaXJkcyJ9LHsiZmlsdGVycy5saWIvbmFtZSI6IkZhdXN0IEZpbHRlcnMgTGlicmFyeSJ9LHsiZmlsdGVycy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsibWF0aHMubGliL2F1dGhvciI6IkdSQU1FIn0seyJtYXRocy5saWIvY29weXJpZ2h0IjoiR1JBTUUifSx7Im1hdGhzLmxpYi9saWNlbnNlIjoiTEdQTCB3aXRoIGV4Y2VwdGlvbiJ9LHsibWF0aHMubGliL25hbWUiOiJGYXVzdCBNYXRoIExpYnJhcnkifSx7Im1hdGhzLmxpYi92ZXJzaW9uIjoiMi4xIn0seyJuYW1lIjoiYmlyZCJ9LHsibm9pc2VzLmxpYi9uYW1lIjoiRmF1c3QgTm9pc2UgR2VuZXJhdG9yIExpYnJhcnkifSx7Im5vaXNlcy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsib3NjaWxsYXRvcnMubGliL25hbWUiOiJGYXVzdCBPc2NpbGxhdG9yIExpYnJhcnkifSx7Im9zY2lsbGF0b3JzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJyZXZlcmJzLmxpYi9uYW1lIjoiRmF1c3QgUmV2ZXJiIExpYnJhcnkifSx7InJldmVyYnMubGliL3ZlcnNpb24iOiIwLjAifSx7InJvdXRlcy5saWIvbmFtZSI6IkZhdXN0IFNpZ25hbCBSb3V0aW5nIExpYnJhcnkifSx7InJvdXRlcy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsic2lnbmFscy5saWIvbmFtZSI6IkZhdXN0IFNpZ25hbCBSb3V0aW5nIExpYnJhcnkifSx7InNpZ25hbHMubGliL3ZlcnNpb24iOiIwLjAifV0sInVpIjpbeyJ0eXBlIjoiaGdyb3VwIiwibGFiZWwiOiJCaXJkcyIsIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiU3BlZWQgKEdyYW51bGF0b3IpIiwiYWRkcmVzcyI6Ii9CaXJkcy9TcGVlZF8oR3JhbnVsYXRvcikiLCJpbmRleCI6IjM5MzM5MiIsIm1ldGEiOlt7IjEiOiIifSx7ImFjYyI6IjAgMSAtMTAgMCAxMCJ9LHsic3R5bGUiOiJrbm9iIn1dLCJpbml0IjoiMjQwIiwibWluIjoiMTIwIiwibWF4IjoiNDgwIiwic3RlcCI6IjAuMSJ9LHsidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IlByb2JhYmlsaXR5IChHcmFudWxhdG9yKSIsImFkZHJlc3MiOiIvQmlyZHMvUHJvYmFiaWxpdHlfKEdyYW51bGF0b3IpIiwiaW5kZXgiOiIzOTM0MjAiLCJtZXRhIjpbeyIyIjoiIn0seyJhY2MiOiIxIDAgLTEwIDAgMTAifSx7InN0eWxlIjoia25vYiJ9LHsidW5pdCI6IiUifV0sImluaXQiOiI1MCIsIm1pbiI6IjI1IiwibWF4IjoiMTAwIiwic3RlcCI6IjEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJQcm94aW1pdHkgKEluc3RyUmV2ZXJiKSIsImFkZHJlc3MiOiIvQmlyZHMvUHJveGltaXR5XyhJbnN0clJldmVyYikiLCJpbmRleCI6IjI2MjE2MCIsIm1ldGEiOlt7IjMiOiIifSx7ImFjYyI6IjEgMCAtMTUgMCAxMCJ9LHsic3R5bGUiOiJrbm9iIn1dLCJpbml0IjoiMC41IiwibWluIjoiMCIsIm1heCI6IjEiLCJzdGVwIjoiMC4wMSJ9XX1dfQ=="; }

/*
 faust2wasm: GRAME 2017-2018
*/
 
'use strict';

// Monophonic Faust DSP
class BirdsProcessor extends AudioWorkletProcessor {
    
    // JSON parsing functions
    static parse_ui(ui, obj, callback)
    {
        for (var i = 0; i < ui.length; i++) {
            BirdsProcessor.parse_group(ui[i], obj, callback);
        }
    }
    
    static parse_group(group, obj, callback)
    {
        if (group.items) {
            BirdsProcessor.parse_items(group.items, obj, callback);
        }
    }
    
    static parse_items(items, obj, callback)
    {
        for (var i = 0; i < items.length; i++) {
            callback(items[i], obj, callback);
        }
    }
    
    static parse_item1(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            BirdsProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Nothing
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            obj.push({ name: item.address,
                     defaultValue: item.init,
                     minValue: item.min,
                     maxValue: item.max });
        }
    }
    
    static parse_item2(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            BirdsProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Keep bargraph adresses
            obj.outputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "soundfile") {
            // Keep soundfile adresses
            obj.soundfile_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            // Keep inputs adresses
            obj.inputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        }
    }
    
    static b64ToUint6(nChr)
    {
        return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
        nChr - 71
        : nChr > 47 && nChr < 58 ?
        nChr + 4
        : nChr === 43 ?
        62
        : nChr === 47 ?
        63
        :
        0;
    }
    
    static atob(sBase64, nBlocksSize)
    {
        if (typeof atob === 'function') {
            return atob(sBase64);
        } else {
            
            var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
            var nInLen = sB64Enc.length;
            var nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;
            var taBytes = new Uint8Array(nOutLen);
            
            for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
                nMod4 = nInIdx & 3;
                nUint24 |= BirdsProcessor.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
                if (nMod4 === 3 || nInLen - nInIdx === 1) {
                    for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
                    }
                    nUint24 = 0;
                }
            }
            return taBytes.buffer;
        }
    }
   
    static get parameterDescriptors () 
    {
        // Analyse JSON to generate AudioParam parameters
        var params = [];
        BirdsProcessor.parse_ui(JSON.parse(getJSONBirds()).ui, params, BirdsProcessor.parse_item1);
        return params;
    }
    
    constructor(options)
    {
        super(options);
      
        this.json_object = JSON.parse(getJSONBirds());

        this.output_handler = function(path, value) { this.port.postMessage({ path: path, value: value }); };
        
        this.ins = null;
        this.outs = null;

        this.dspInChannnels = [];
        this.dspOutChannnels = [];

        this.numIn = parseInt(this.json_object.inputs);
        this.numOut = parseInt(this.json_object.outputs);

        // Memory allocator
        this.ptr_size = 4;
        this.sample_size = 4;
        this.integer_size = 4;
        
        this.Birds_instance = new WebAssembly.Instance(BirdsProcessor.wasm_module, BirdsProcessor.importObject);
  	   	this.factory = this.Birds_instance.exports;
        this.HEAP = this.Birds_instance.exports.memory.buffer;
        this.HEAP32 = new Int32Array(this.HEAP);
        this.HEAPF32 = new Float32Array(this.HEAP);

        //console.log(this.HEAP);
        //console.log(this.HEAP32);
        //console.log(this.HEAPF32);

        // bargraph
        this.outputs_timer = 5;
        this.outputs_items = [];

        // input items
        this.inputs_items = [];
        
        // soundfile items
        this.soundfile_items = [];

        // Start of HEAP index

        // DSP is placed first with index 0. Audio buffer start at the end of DSP.
        this.audio_heap_ptr = parseInt(this.json_object.size);

        // Setup pointers offset
        this.audio_heap_ptr_inputs = this.audio_heap_ptr;
        this.audio_heap_ptr_outputs = this.audio_heap_ptr_inputs + (this.numIn * this.ptr_size);

        // Setup buffer offset
        this.audio_heap_inputs = this.audio_heap_ptr_outputs + (this.numOut * this.ptr_size);
        this.audio_heap_outputs = this.audio_heap_inputs + (this.numIn * BirdsProcessor.buffer_size * this.sample_size);
        
        // Start of DSP memory : DSP is placed first with index 0
        this.dsp = 0;

        this.pathTable = [];
     
        // Send output values to the AudioNode
        this.update_outputs = function ()
        {
            if (this.outputs_items.length > 0 && this.output_handler && this.outputs_timer-- === 0) {
                this.outputs_timer = 5;
                for (var i = 0; i < this.outputs_items.length; i++) {
                    this.output_handler(this.outputs_items[i], this.HEAPF32[this.pathTable[this.outputs_items[i]] >> 2]);
                }
            }
        }
        
        this.loadFile = function (sound_index, sound_ptr, length, sample_rate, channels, buffers)
        {
            /*
             Soundfile layout:
            
                FAUSTFLOAT** fBuffers;
                int fLength;
                int fSampleRate;
                int fChannels;
             
                ===========
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                Soundfile struct
                fBuffers[channels]
                fBuffers0
                fBuffers1
                ...
                ===========
            */
            
            var size_of_soundfile = this.ptr_size + (this.integer_size * 3);  // fBuffers, fLength, fSampleRate, fChannels
            
            //console.log("sound_ptr " + sound_ptr);
            //console.log("size_of_soundfile " + size_of_soundfile);
            
            // end of sounfile
            var end_of_soundfile_ptr = sound_ptr + size_of_soundfile;
            
            this.HEAP32[sound_ptr >> 2] = end_of_soundfile_ptr;
            this.HEAP32[(sound_ptr + 4) >> 2] = length;      // fLength
            this.HEAP32[(sound_ptr + 8) >> 2] = sample_rate; // fSampleRate
            this.HEAP32[(sound_ptr + 12) >> 2] = channels;   // fChannels
            
            //console.log("end_of_soundfile_ptr " + end_of_soundfile_ptr);
            
            // Setup soundfile pointers
            var start_of_soundfile_data_ptr = end_of_soundfile_ptr + this.ptr_size * channels;
            
            for (var i = 0; i < channels; i++) {
                this.HEAP32[(end_of_soundfile_ptr + (i * this.ptr_size)) >> 2] = start_of_soundfile_data_ptr + (i * length * this.sample_size);
            }
            
            // Setup soundfile buffer
            for (var i = 0; i < channels; i++) {
                
                // start of sound buffer
                var start_of_buffer_ptr = start_of_soundfile_data_ptr + (i * length * this.sample_size);
                
                // generate a 440 Hz signal
                for (var j = 0; j < length; j++) {
                    this.HEAPF32[(start_of_buffer_ptr + (j * this.sample_size)) >> 2] = 0.8 * Math.sin((j/length)*2*Math.PI);
                }
            }
            
            // Setup fSoundfile fields in the DSP structure
            //console.log("sound_index " + sound_index);
            //console.log("this.pathTable[this.soundfile_items[sound_index]] " + this.pathTable[this.soundfile_items[sound_index]]);
            
            this.HEAP32[this.pathTable[this.soundfile_items[sound_index]] >> 2] = sound_ptr;
            
            /*
            console.log("start_of_soundfile_data_ptr " + start_of_soundfile_data_ptr);
            console.log("length " + length);
            console.log("channels " + channels);
            console.log("this.sample_size " + this.sample_size);
            console.log("END " + (start_of_soundfile_data_ptr + (channels * length * this.sample_size)));
            */
            
            // End of buffer data;
            return start_of_soundfile_data_ptr + (channels * length * this.sample_size);
        }
        
        this.initAux = function ()
        {
            var i;
            
            if (this.numIn > 0) {
                this.ins = this.audio_heap_ptr_inputs;
                for (i = 0; i < this.numIn; i++) {
                    this.HEAP32[(this.ins >> 2) + i] = this.audio_heap_inputs + ((BirdsProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Ins buffer tables
                var dspInChans = this.HEAP32.subarray(this.ins >> 2, (this.ins + this.numIn * this.ptr_size) >> 2);
                for (i = 0; i < this.numIn; i++) {
                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + BirdsProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            if (this.numOut > 0) {
                this.outs = this.audio_heap_ptr_outputs;
                for (i = 0; i < this.numOut; i++) {
                    this.HEAP32[(this.outs >> 2) + i] = this.audio_heap_outputs + ((BirdsProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Out buffer tables
                var dspOutChans = this.HEAP32.subarray(this.outs >> 2, (this.outs + this.numOut * this.ptr_size) >> 2);
                for (i = 0; i < this.numOut; i++) {
                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + BirdsProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            // Parse UI
            BirdsProcessor.parse_ui(this.json_object.ui, this, BirdsProcessor.parse_item2);
            
            /*
            console.log("soundfile_items.length " + this.soundfile_items.length);
            
            // Setup soundfile offset (after audio data)
            this.soundfile_ptr = this.audio_heap_outputs + (this.numOut * BirdsProcessor.buffer_size * this.sample_size);
            
            var sound_ptr1 = this.soundfile_ptr;
            var sound_ptr2 = this.loadFile(0, sound_ptr1, 44100/700, 44100, 2, null);
            var sound_ptr3 = this.loadFile(1, sound_ptr2, 44100/500, 44100, 2, null);
            */
             
            // Init DSP
            this.factory.init(this.dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope  
        }

        this.setParamValue = function (path, val)
        {
            this.HEAPF32[this.pathTable[path]] = val;
        }

        this.getParamValue = function (path)
        {
            return this.HEAPF32[this.pathTable[path]];
        }

        // Init resulting DSP
        this.initAux();
    }
    
    process(inputs, outputs, parameters) 
    {
        var input = inputs[0];
        var output = outputs[0];
        
        // Check inputs
        if (this.numIn > 0 && ((input === undefined) || (input[0].length === 0))) {
            //console.log("Process input error");
            return true;
        }
        // Check outputs
        if (this.numOut > 0 && ((output === undefined) || (output[0].length === 0))) {
            //console.log("Process output error");
            return true;
        }
        
        // Copy inputs
        if (input !== undefined) {
            for (var chan = 0; chan < Math.min(this.numIn, input.length) ; ++chan) {
                var dspInput = this.dspInChannnels[chan];
                dspInput.set(input[chan]);
            }
        }
        
        // Update controls (possibly needed for sample accurate control)
        var params = Object.entries(parameters);
        for (var i = 0; i < params.length; i++) {
            this.HEAPF32[this.pathTable[params[i][0]] >> 2] = params[i][1][0];
        }
        
        // Compute
        this.factory.compute(this.dsp, BirdsProcessor.buffer_size, this.ins, this.outs);
        
        // Update bargraph
        this.update_outputs();
        
        // Copy outputs
        if (output !== undefined) {
            for (var chan = 0; chan < Math.min(this.numOut, output.length); ++chan) {
                var dspOutput = this.dspOutChannnels[chan];
                output[chan].set(dspOutput);
            }
        }
        
        return true;
    }
}

// Globals

BirdsProcessor.buffer_size = 128;

BirdsProcessor.importObject = {
    env: {
        memoryBase: 0,
        tableBase: 0,
            
        // Integer version
        _abs: Math.abs,
        
        // Float version
        _acosf: Math.acos,
        _asinf: Math.asin,
        _atanf: Math.atan,
        _atan2f: Math.atan2,
        _ceilf: Math.ceil,
        _cosf: Math.cos,
        _expf: Math.exp,
        _floorf: Math.floor,
        _fmodf: function(x, y) { return x % y; },
        _logf: Math.log,
        _log10f: Math.log10,
        _max_f: Math.max,
        _min_f: Math.min,
        _remainderf: function(x, y) { return x - Math.round(x/y) * y; },
        _powf: Math.pow,
        _roundf: Math.fround,
        _sinf: Math.sin,
        _sqrtf: Math.sqrt,
        _tanf: Math.tan,
           
        // Double version
        _acos: Math.acos,
        _asin: Math.asin,
        _atan: Math.atan,
        _atan2: Math.atan2,
        _ceil: Math.ceil,
        _cos: Math.cos,
        _exp: Math.exp,
        _floor: Math.floor,
        _fmod: function(x, y) { return x % y; },
        _log: Math.log,
        _log10: Math.log10,
        _max_: Math.max,
        _min_: Math.min,
        _remainder:function(x, y) { return x - Math.round(x/y) * y; },
        _pow: Math.pow,
        _round: Math.fround,
        _sin: Math.sin,
        _sqrt: Math.sqrt,
        _tan: Math.tan,
        
        table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })
    }
};

// Synchronously compile and instantiate the WASM module
try {
    if (BirdsProcessor.wasm_module == undefined) {
        BirdsProcessor.wasm_module = new WebAssembly.Module(BirdsProcessor.atob(getBase64CodeBirds()));
        registerProcessor('Birds', BirdsProcessor);
    }
} catch (e) {
    console.log(e); console.log("Faust Birds cannot be loaded or compiled");
}

