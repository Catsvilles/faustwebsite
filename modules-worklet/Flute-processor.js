
/*
Code generated with Faust version 2.6.1
Compilation options: wasm-ib, -scal -ftz 2
*/

function getJSONFlute() {
	return "{\"name\":\"Flute\",\"filename\":\"Flute\",\"version\":\"2.6.1\",\"options\":\"wasm-ib, -scal -ftz 2\",\"size\":\"910160\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"author\":\"Romain Michon (rmichon@ccrma.stanford.edu)\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"copyright\":\"Romain Michon\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"description\":\"Nonlinear WaveGuide Flute\"},{\"envelopes.lib/author\":\"GRAME\"},{\"envelopes.lib/copyright\":\"GRAME\"},{\"envelopes.lib/license\":\"LGPL with exception\"},{\"envelopes.lib/name\":\"Faust Envelope Library\"},{\"envelopes.lib/version\":\"0.0\"},{\"filename\":\"Flute\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"instruments.lib/author\":\"Romain Michon (rmichon@ccrma.stanford.edu)\"},{\"instruments.lib/copyright\":\"Romain Michon\"},{\"instruments.lib/licence\":\"STK-4.3\"},{\"instruments.lib/name\":\"Faust-STK Tools Library\"},{\"instruments.lib/version\":\"1.0\"},{\"licence\":\"STK-4.3\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Flute\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"reverbs.lib/name\":\"Faust Reverb Library\"},{\"reverbs.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"},{\"version\":\"1.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"Flute\",\"items\":[{\"type\":\"hslider\",\"label\":\"ON/OFF (ASR Envelope)\",\"address\":\"/Flute/ON/OFF_(ASR_Envelope)\",\"index\":\"131156\",\"meta\":[{\"0\":\"\"}],\"init\":\"0\",\"min\":\"0\",\"max\":\"1\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Frequency\",\"address\":\"/Flute/Frequency\",\"index\":\"131212\",\"meta\":[{\"1\":\"\"},{\"acc\":\"1 1 -10 0 10\"}],\"init\":\"440\",\"min\":\"247\",\"max\":\"1200\",\"step\":\"1\"},{\"type\":\"hslider\",\"label\":\"Pressure\",\"address\":\"/Flute/Pressure\",\"index\":\"131224\",\"meta\":[{\"2\":\"\"},{\"acc\":\"1 0 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.96\",\"min\":\"0.2\",\"max\":\"0.99\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Breath Noise\",\"address\":\"/Flute/Breath_Noise\",\"index\":\"131284\",\"meta\":[{\"3\":\"\"},{\"acc\":\"2 0 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.02\",\"min\":\"0.01\",\"max\":\"0.2\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Vibrato Freq (Vibrato Envelope)\",\"address\":\"/Flute/Vibrato_Freq_(Vibrato_Envelope)\",\"index\":\"131300\",\"meta\":[{\"4\":\"\"},{\"acc\":\"0 1 -10 0 10\"},{\"style\":\"knob\"},{\"unit\":\"Hz\"}],\"init\":\"4\",\"min\":\"0.5\",\"max\":\"8\",\"step\":\"0.1\"},{\"type\":\"hgroup\",\"label\":\"Reverb\",\"meta\":[{\"5\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Reverberation Volume (InstrReverb)\",\"address\":\"/Flute/Reverb/Reverberation_Volume_(InstrReverb)\",\"index\":\"196968\",\"meta\":[{\"1\":\"\"},{\"acc\":\"1 1 -30 0 13\"},{\"style\":\"knob\"}],\"init\":\"0.2\",\"min\":\"0.05\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Reverberation Room Size (InstrReverb)\",\"address\":\"/Flute/Reverb/Reverberation_Room_Size_(InstrReverb)\",\"index\":\"32\",\"meta\":[{\"2\":\"\"},{\"acc\":\"1 1 -30 0 13\"},{\"style\":\"knob\"}],\"init\":\"0.72\",\"min\":\"0.05\",\"max\":\"1.7\",\"step\":\"0.01\"}]}]}]}";
}
function getBase64CodeFlute() { return "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ciI6IkdSQU1FIn0seyJlbnZlbG9wZXMubGliL2NvcHlyaWdodCI6IkdSQU1FIn0seyJlbnZlbG9wZXMubGliL2xpY2Vuc2UiOiJMR1BMIHdpdGggZXhjZXB0aW9uIn0seyJlbnZlbG9wZXMubGliL25hbWUiOiJGYXVzdCBFbnZlbG9wZSBMaWJyYXJ5In0seyJlbnZlbG9wZXMubGliL3ZlcnNpb24iOiIwLjAifSx7ImZpbGVuYW1lIjoiRmx1dGUifSx7ImZpbHRlcnMubGliL25hbWUiOiJGYXVzdCBGaWx0ZXJzIExpYnJhcnkifSx7ImZpbHRlcnMubGliL3ZlcnNpb24iOiIwLjAifSx7Imluc3RydW1lbnRzLmxpYi9hdXRob3IiOiJSb21haW4gTWljaG9uIChybWljaG9uQGNjcm1hLnN0YW5mb3JkLmVkdSkifSx7Imluc3RydW1lbnRzLmxpYi9jb3B5cmlnaHQiOiJSb21haW4gTWljaG9uIn0seyJpbnN0cnVtZW50cy5saWIvbGljZW5jZSI6IlNUSy00LjMifSx7Imluc3RydW1lbnRzLmxpYi9uYW1lIjoiRmF1c3QtU1RLIFRvb2xzIExpYnJhcnkifSx7Imluc3RydW1lbnRzLmxpYi92ZXJzaW9uIjoiMS4wIn0seyJsaWNlbmNlIjoiU1RLLTQuMyJ9LHsibWF0aHMubGliL2F1dGhvciI6IkdSQU1FIn0seyJtYXRocy5saWIvY29weXJpZ2h0IjoiR1JBTUUifSx7Im1hdGhzLmxpYi9saWNlbnNlIjoiTEdQTCB3aXRoIGV4Y2VwdGlvbiJ9LHsibWF0aHMubGliL25hbWUiOiJGYXVzdCBNYXRoIExpYnJhcnkifSx7Im1hdGhzLmxpYi92ZXJzaW9uIjoiMi4xIn0seyJuYW1lIjoiRmx1dGUifSx7Im5vaXNlcy5saWIvbmFtZSI6IkZhdXN0IE5vaXNlIEdlbmVyYXRvciBMaWJyYXJ5In0seyJub2lzZXMubGliL3ZlcnNpb24iOiIwLjAifSx7Im9zY2lsbGF0b3JzLmxpYi9uYW1lIjoiRmF1c3QgT3NjaWxsYXRvciBMaWJyYXJ5In0seyJvc2NpbGxhdG9ycy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsicmV2ZXJicy5saWIvbmFtZSI6IkZhdXN0IFJldmVyYiBMaWJyYXJ5In0seyJyZXZlcmJzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJyb3V0ZXMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJyb3V0ZXMubGliL3ZlcnNpb24iOiIwLjAifSx7InNpZ25hbHMubGliL25hbWUiOiJGYXVzdCBTaWduYWwgUm91dGluZyBMaWJyYXJ5In0seyJzaWduYWxzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJ2ZXJzaW9uIjoiMS4wIn1dLCJ1aSI6W3sidHlwZSI6InZncm91cCIsImxhYmVsIjoiRmx1dGUiLCJpdGVtcyI6W3sidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6Ik9OL09GRiAoQVNSIEVudmVsb3BlKSIsImFkZHJlc3MiOiIvRmx1dGUvT04vT0ZGXyhBU1JfRW52ZWxvcGUpIiwiaW5kZXgiOiIxMzExNTYiLCJtZXRhIjpbeyIwIjoiIn1dLCJpbml0IjoiMCIsIm1pbiI6IjAiLCJtYXgiOiIxIiwic3RlcCI6IjEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJGcmVxdWVuY3kiLCJhZGRyZXNzIjoiL0ZsdXRlL0ZyZXF1ZW5jeSIsImluZGV4IjoiMTMxMjEyIiwibWV0YSI6W3siMSI6IiJ9LHsiYWNjIjoiMSAxIC0xMCAwIDEwIn1dLCJpbml0IjoiNDQwIiwibWluIjoiMjQ3IiwibWF4IjoiMTIwMCIsInN0ZXAiOiIxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUHJlc3N1cmUiLCJhZGRyZXNzIjoiL0ZsdXRlL1ByZXNzdXJlIiwiaW5kZXgiOiIxMzEyMjQiLCJtZXRhIjpbeyIyIjoiIn0seyJhY2MiOiIxIDAgLTEwIDAgMTAifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjAuOTYiLCJtaW4iOiIwLjIiLCJtYXgiOiIwLjk5Iiwic3RlcCI6IjAuMDEifSx7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJCcmVhdGggTm9pc2UiLCJhZGRyZXNzIjoiL0ZsdXRlL0JyZWF0aF9Ob2lzZSIsImluZGV4IjoiMTMxMjg0IiwibWV0YSI6W3siMyI6IiJ9LHsiYWNjIjoiMiAwIC0xMCAwIDEwIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiIwLjAyIiwibWluIjoiMC4wMSIsIm1heCI6IjAuMiIsInN0ZXAiOiIwLjAxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiVmlicmF0byBGcmVxIChWaWJyYXRvIEVudmVsb3BlKSIsImFkZHJlc3MiOiIvRmx1dGUvVmlicmF0b19GcmVxXyhWaWJyYXRvX0VudmVsb3BlKSIsImluZGV4IjoiMTMxMzAwIiwibWV0YSI6W3siNCI6IiJ9LHsiYWNjIjoiMCAxIC0xMCAwIDEwIn0seyJzdHlsZSI6Imtub2IifSx7InVuaXQiOiJIeiJ9XSwiaW5pdCI6IjQiLCJtaW4iOiIwLjUiLCJtYXgiOiI4Iiwic3RlcCI6IjAuMSJ9LHsidHlwZSI6Imhncm91cCIsImxhYmVsIjoiUmV2ZXJiIiwibWV0YSI6W3siNSI6IiJ9XSwiaXRlbXMiOlt7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJSZXZlcmJlcmF0aW9uIFZvbHVtZSAoSW5zdHJSZXZlcmIpIiwiYWRkcmVzcyI6Ii9GbHV0ZS9SZXZlcmIvUmV2ZXJiZXJhdGlvbl9Wb2x1bWVfKEluc3RyUmV2ZXJiKSIsImluZGV4IjoiMTk2OTY4IiwibWV0YSI6W3siMSI6IiJ9LHsiYWNjIjoiMSAxIC0zMCAwIDEzIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiIwLjIiLCJtaW4iOiIwLjA1IiwibWF4IjoiMSIsInN0ZXAiOiIwLjAxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUmV2ZXJiZXJhdGlvbiBSb29tIFNpemUgKEluc3RyUmV2ZXJiKSIsImFkZHJlc3MiOiIvRmx1dGUvUmV2ZXJiL1JldmVyYmVyYXRpb25fUm9vbV9TaXplXyhJbnN0clJldmVyYikiLCJpbmRleCI6IjMyIiwibWV0YSI6W3siMiI6IiJ9LHsiYWNjIjoiMSAxIC0zMCAwIDEzIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiIwLjcyIiwibWluIjoiMC4wNSIsIm1heCI6IjEuNyIsInN0ZXAiOiIwLjAxIn1dfV19XX0w"; }

/*
 faust2wasm: GRAME 2017-2018
*/
 
'use strict';

// Monophonic Faust DSP
class FluteProcessor extends AudioWorkletProcessor {
    
    // JSON parsing functions
    static parse_ui(ui, obj, callback)
    {
        for (var i = 0; i < ui.length; i++) {
            FluteProcessor.parse_group(ui[i], obj, callback);
        }
    }
    
    static parse_group(group, obj, callback)
    {
        if (group.items) {
            FluteProcessor.parse_items(group.items, obj, callback);
        }
    }
    
    static parse_items(items, obj, callback)
    {
        for (var i = 0; i < items.length; i++) {
            callback(items[i], obj, callback);
        }
    }
    
    static parse_item1(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            FluteProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Nothing
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            obj.push({ name: item.address,
                     defaultValue: item.init,
                     minValue: item.min,
                     maxValue: item.max });
        }
    }
    
    static parse_item2(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            FluteProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Keep bargraph adresses
            obj.outputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            // Keep inputs adresses
            obj.inputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        }
    }
    
    static b64ToUint6(nChr)
    {
        return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
        nChr - 71
        : nChr > 47 && nChr < 58 ?
        nChr + 4
        : nChr === 43 ?
        62
        : nChr === 47 ?
        63
        :
        0;
    }
    
    static atob(sBase64, nBlocksSize)
    {
        if (typeof atob === 'function') {
            return atob(sBase64);
        } else {
            
            var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
            var nInLen = sB64Enc.length;
            var nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;
            var taBytes = new Uint8Array(nOutLen);
            
            for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
                nMod4 = nInIdx & 3;
                nUint24 |= FluteProcessor.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
                if (nMod4 === 3 || nInLen - nInIdx === 1) {
                    for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
                    }
                    nUint24 = 0;
                }
            }
            return taBytes.buffer;
        }
    }
   
    static get parameterDescriptors () 
    {
        // Analyse JSON to generate AudioParam parameters
        var params = [];
        FluteProcessor.parse_ui(JSON.parse(getJSONFlute()).ui, params, FluteProcessor.parse_item1);
        return params;
    }
    
    constructor(options)
    {
        super(options);
      
        this.json_object = JSON.parse(getJSONFlute());

        this.output_handler = function(path, value) { this.port.postMessage({ path: path, value: value }); };
        
        this.ins = null;
        this.outs = null;

        this.dspInChannnels = [];
        this.dspOutChannnels = [];

        this.numIn = parseInt(this.json_object.inputs);
        this.numOut = parseInt(this.json_object.outputs);

        // Memory allocator
        this.ptr_size = 4;
        this.sample_size = 4;
        
        this.Flute_instance = new WebAssembly.Instance(FluteProcessor.wasm_module, FluteProcessor.importObject);
  	   	this.factory = this.Flute_instance.exports;
        this.HEAP = this.Flute_instance.exports.memory.buffer;
        this.HEAP32 = new Int32Array(this.HEAP);
        this.HEAPF32 = new Float32Array(this.HEAP);

        //console.log(this.HEAP);
        //console.log(this.HEAP32);
        //console.log(this.HEAPF32);

        // bargraph
        this.outputs_timer = 5;
        this.outputs_items = [];

        // input items
        this.inputs_items = [];

        // Start of HEAP index

        // DSP is placed first with index 0. Audio buffer start at the end of DSP.
        this.audio_heap_ptr = parseInt(this.json_object.size);

        // Setup pointers offset
        this.audio_heap_ptr_inputs = this.audio_heap_ptr;
        this.audio_heap_ptr_outputs = this.audio_heap_ptr_inputs + (this.numIn * this.ptr_size);

        // Setup buffer offset
        this.audio_heap_inputs = this.audio_heap_ptr_outputs + (this.numOut * this.ptr_size);
        this.audio_heap_outputs = this.audio_heap_inputs + (this.numIn * FluteProcessor.buffer_size * this.sample_size);

        // Start of DSP memory : DSP is placed first with index 0
        this.dsp = 0;

        this.pathTable = [];

        // Send output values to the AudioNode
        this.update_outputs = function ()
        {
            if (this.outputs_items.length > 0 && this.output_handler && this.outputs_timer-- === 0) {
                this.outputs_timer = 5;
                for (var i = 0; i < this.outputs_items.length; i++) {
                    this.output_handler(this.outputs_items[i], this.HEAPF32[this.pathTable[this.outputs_items[i]] >> 2]);
                }
            }
        }
        
        this.initAux = function ()
        {
            var i;
            
            if (this.numIn > 0) {
                this.ins = this.audio_heap_ptr_inputs;
                for (i = 0; i < this.numIn; i++) {
                    this.HEAP32[(this.ins >> 2) + i] = this.audio_heap_inputs + ((FluteProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Ins buffer tables
                var dspInChans = this.HEAP32.subarray(this.ins >> 2, (this.ins + this.numIn * this.ptr_size) >> 2);
                for (i = 0; i < this.numIn; i++) {
                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + FluteProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            if (this.numOut > 0) {
                this.outs = this.audio_heap_ptr_outputs;
                for (i = 0; i < this.numOut; i++) {
                    this.HEAP32[(this.outs >> 2) + i] = this.audio_heap_outputs + ((FluteProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Out buffer tables
                var dspOutChans = this.HEAP32.subarray(this.outs >> 2, (this.outs + this.numOut * this.ptr_size) >> 2);
                for (i = 0; i < this.numOut; i++) {
                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + FluteProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            // Parse UI
            FluteProcessor.parse_ui(this.json_object.ui, this, FluteProcessor.parse_item2);
            
            // Init DSP
            this.factory.init(this.dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope  
        }

        this.setParamValue = function (path, val)
        {
            this.HEAPF32[this.pathTable[path]] = val;
        }

        this.getParamValue = function (path)
        {
            return this.HEAPF32[this.pathTable[path]];
        }

        // Init resulting DSP
        this.initAux();
    }
    
    process(inputs, outputs, parameters) 
    {
        var input = inputs[0];
        var output = outputs[0];
        
        // Check inputs
        if (this.numIn > 0 && ((input === undefined) || (input[0].length === 0))) {
            //console.log("Process input error");
            return true;
        }
        // Check outputs
        if (this.numOut > 0 && ((output === undefined) || (output[0].length === 0))) {
            //console.log("Process output error");
            return true;
        }
        
        // Copy inputs
        if (input !== undefined) {
            for (var chan = 0; chan < Math.min(this.numIn, input.length) ; ++chan) {
                var dspInput = this.dspInChannnels[chan];
                dspInput.set(input[chan]);
            }
        }
        
        // Update controls (possibly needed for sample accurate control)
        var params = Object.entries(parameters);
        for (var i = 0; i < params.length; i++) {
            this.HEAPF32[this.pathTable[params[i][0]] >> 2] = params[i][1][0];
        }
        
        // Compute
        this.factory.compute(this.dsp, FluteProcessor.buffer_size, this.ins, this.outs);
        
        // Update bargraph
        this.update_outputs();
        
        // Copy outputs
        if (output !== undefined) {
            for (var chan = 0; chan < Math.min(this.numOut, output.length); ++chan) {
                var dspOutput = this.dspOutChannnels[chan];
                output[chan].set(dspOutput);
            }
        }
        
        return true;
    }
}

// Globals

FluteProcessor.buffer_size = 128;

FluteProcessor.importObject = {
    env: {
        memoryBase: 0,
        tableBase: 0,
            
        // Integer version
        _abs: Math.abs,
        
        // Float version
        _acosf: Math.acos,
        _asinf: Math.asin,
        _atanf: Math.atan,
        _atan2f: Math.atan2,
        _ceilf: Math.ceil,
        _cosf: Math.cos,
        _expf: Math.exp,
        _floorf: Math.floor,
        _fmodf: function(x, y) { return x % y; },
        _logf: Math.log,
        _log10f: Math.log10,
        _max_f: Math.max,
        _min_f: Math.min,
        _remainderf: function(x, y) { return x - Math.round(x/y) * y; },
        _powf: Math.pow,
        _roundf: Math.fround,
        _sinf: Math.sin,
        _sqrtf: Math.sqrt,
        _tanf: Math.tan,
           
        // Double version
        _acos: Math.acos,
        _asin: Math.asin,
        _atan: Math.atan,
        _atan2: Math.atan2,
        _ceil: Math.ceil,
        _cos: Math.cos,
        _exp: Math.exp,
        _floor: Math.floor,
        _fmod: function(x, y) { return x % y; },
        _log: Math.log,
        _log10: Math.log10,
        _max_: Math.max,
        _min_: Math.min,
        _remainder:function(x, y) { return x - Math.round(x/y) * y; },
        _pow: Math.pow,
        _round: Math.fround,
        _sin: Math.sin,
        _sqrt: Math.sqrt,
        _tan: Math.tan,
        
        table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })
    }
};

// Synchronously compile and instantiate the WASM module
try {
    if (FluteProcessor.wasm_module == undefined) {
        FluteProcessor.wasm_module = new WebAssembly.Module(FluteProcessor.atob(getBase64CodeFlute()));
        registerProcessor('Flute', FluteProcessor);
    }
} catch (e) {
    console.log(e); console.log("Faust Flute cannot be loaded or compiled");
}

