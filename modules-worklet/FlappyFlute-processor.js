
/*
Code generated with Faust version 2.5.32
Compilation options: wasm-ib, -scal -ftz 2
*/

function getJSONFlappyFlute() {
	return "{\"name\":\"Flappy Flute\",\"filename\":\"FlappyFlute\",\"version\":\"2.5.32\",\"options\":\"wasm-ib, -scal -ftz 2\",\"size\":\"1025472\",\"inputs\":\"0\",\"outputs\":\"2\",\"meta\":[{\"author\":\"ER\"},{\"basics.lib/name\":\"Faust Basic Element Library\"},{\"basics.lib/version\":\"0.0\"},{\"delays.lib/name\":\"Faust Delay Library\"},{\"delays.lib/version\":\"0.0\"},{\"envelopes.lib/author\":\"GRAME\"},{\"envelopes.lib/copyright\":\"GRAME\"},{\"envelopes.lib/license\":\"LGPL with exception\"},{\"envelopes.lib/name\":\"Faust Envelope Library\"},{\"envelopes.lib/version\":\"0.0\"},{\"filename\":\"FlappyFlute\"},{\"filters.lib/name\":\"Faust Filters Library\"},{\"filters.lib/version\":\"0.0\"},{\"instruments.lib/author\":\"Romain Michon (rmichon@ccrma.stanford.edu)\"},{\"instruments.lib/copyright\":\"Romain Michon\"},{\"instruments.lib/licence\":\"STK-4.3\"},{\"instruments.lib/name\":\"Faust-STK Tools Library\"},{\"instruments.lib/version\":\"1.0\"},{\"maths.lib/author\":\"GRAME\"},{\"maths.lib/copyright\":\"GRAME\"},{\"maths.lib/license\":\"LGPL with exception\"},{\"maths.lib/name\":\"Faust Math Library\"},{\"maths.lib/version\":\"2.1\"},{\"name\":\"Flappy Flute\"},{\"noises.lib/name\":\"Faust Noise Generator Library\"},{\"noises.lib/version\":\"0.0\"},{\"oscillators.lib/name\":\"Faust Oscillator Library\"},{\"oscillators.lib/version\":\"0.0\"},{\"reverbs.lib/name\":\"Faust Reverb Library\"},{\"reverbs.lib/version\":\"0.0\"},{\"routes.lib/name\":\"Faust Signal Routing Library\"},{\"routes.lib/version\":\"0.0\"},{\"signals.lib/name\":\"Faust Signal Routing Library\"},{\"signals.lib/version\":\"0.0\"}],\"ui\":[{\"type\":\"vgroup\",\"label\":\"Flappy Flute\",\"items\":[{\"type\":\"hslider\",\"label\":\"Frequency\",\"address\":\"/Flappy_Flute/Frequency\",\"index\":\"131180\",\"meta\":[{\"1\":\"\"},{\"acc\":\"1 1 -10 0 10\"},{\"tooltip\":\"Tone frequency\"},{\"unit\":\"Hz\"}],\"init\":\"440\",\"min\":\"247\",\"max\":\"1200\",\"step\":\"1\"},{\"type\":\"hgroup\",\"label\":\"Instrument\",\"meta\":[{\"2\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Volume\",\"address\":\"/Flappy_Flute/Instrument/Volume\",\"index\":\"131156\",\"meta\":[{\"1\":\"\"},{\"acc\":\"0 1 -12 0 12\"},{\"style\":\"knob\"}],\"init\":\"1\",\"min\":\"0.75\",\"max\":\"4\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Speed (Granulator)\",\"address\":\"/Flappy_Flute/Instrument/Speed_(Granulator)\",\"index\":\"131248\",\"meta\":[{\"2\":\"\"},{\"acc\":\"0 1 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"4\",\"min\":\"1\",\"max\":\"16\",\"step\":\"0.0001\"},{\"type\":\"hslider\",\"label\":\"Probability (Granulator)\",\"address\":\"/Flappy_Flute/Instrument/Probability_(Granulator)\",\"index\":\"131220\",\"meta\":[{\"3\":\"\"},{\"acc\":\"1 0 -10 0 10\"},{\"style\":\"knob\"},{\"unit\":\"%\"}],\"init\":\"88\",\"min\":\"60\",\"max\":\"100\",\"step\":\"1\"}]},{\"type\":\"hgroup\",\"label\":\"Parameters\",\"meta\":[{\"3\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Pressure\",\"address\":\"/Flappy_Flute/Parameters/Pressure\",\"index\":\"131192\",\"meta\":[{\"acc\":\"0 0 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"1\",\"min\":\"0.6\",\"max\":\"1\",\"step\":\"0.01\"},{\"type\":\"hslider\",\"label\":\"Breath Noise\",\"address\":\"/Flappy_Flute/Parameters/Breath_Noise\",\"index\":\"131852\",\"meta\":[{\"acc\":\"0 1 -10 0 10\"},{\"style\":\"knob\"}],\"init\":\"0.01\",\"min\":\"0.01\",\"max\":\"0.2\",\"step\":\"0.01\"}]},{\"type\":\"hgroup\",\"label\":\"Reverberation\",\"meta\":[{\"4\":\"\"}],\"items\":[{\"type\":\"hslider\",\"label\":\"Echo Intensity\",\"address\":\"/Flappy_Flute/Reverberation/Echo_Intensity\",\"index\":\"197592\",\"meta\":[{\"acc\":\"2 0 -10 10 0 0.001\"},{\"style\":\"knob\"}],\"init\":\"0.001\",\"min\":\"0.001\",\"max\":\"0.65\",\"step\":\"0.001\"},{\"type\":\"hslider\",\"label\":\"Reverberation Room Size (InstrReverb)\",\"address\":\"/Flappy_Flute/Reverberation/Reverberation_Room_Size_(InstrReverb)\",\"index\":\"32\",\"meta\":[{\"acc\":\"1 1 -30 0 16\"},{\"style\":\"knob\"}],\"init\":\"0.72\",\"min\":\"0.05\",\"max\":\"2\",\"step\":\"0.01\"}]}]}]}";
}
function getBase64CodeFlappyFlute() { return "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eyJmaWx0ZXJzLmxpYi9uYW1lIjoiRmF1c3QgRmlsdGVycyBMaWJyYXJ5In0seyJmaWx0ZXJzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJpbnN0cnVtZW50cy5saWIvYXV0aG9yIjoiUm9tYWluIE1pY2hvbiAocm1pY2hvbkBjY3JtYS5zdGFuZm9yZC5lZHUpIn0seyJpbnN0cnVtZW50cy5saWIvY29weXJpZ2h0IjoiUm9tYWluIE1pY2hvbiJ9LHsiaW5zdHJ1bWVudHMubGliL2xpY2VuY2UiOiJTVEstNC4zIn0seyJpbnN0cnVtZW50cy5saWIvbmFtZSI6IkZhdXN0LVNUSyBUb29scyBMaWJyYXJ5In0seyJpbnN0cnVtZW50cy5saWIvdmVyc2lvbiI6IjEuMCJ9LHsibWF0aHMubGliL2F1dGhvciI6IkdSQU1FIn0seyJtYXRocy5saWIvY29weXJpZ2h0IjoiR1JBTUUifSx7Im1hdGhzLmxpYi9saWNlbnNlIjoiTEdQTCB3aXRoIGV4Y2VwdGlvbiJ9LHsibWF0aHMubGliL25hbWUiOiJGYXVzdCBNYXRoIExpYnJhcnkifSx7Im1hdGhzLmxpYi92ZXJzaW9uIjoiMi4xIn0seyJuYW1lIjoiRmxhcHB5IEZsdXRlIn0seyJub2lzZXMubGliL25hbWUiOiJGYXVzdCBOb2lzZSBHZW5lcmF0b3IgTGlicmFyeSJ9LHsibm9pc2VzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJvc2NpbGxhdG9ycy5saWIvbmFtZSI6IkZhdXN0IE9zY2lsbGF0b3IgTGlicmFyeSJ9LHsib3NjaWxsYXRvcnMubGliL3ZlcnNpb24iOiIwLjAifSx7InJldmVyYnMubGliL25hbWUiOiJGYXVzdCBSZXZlcmIgTGlicmFyeSJ9LHsicmV2ZXJicy5saWIvdmVyc2lvbiI6IjAuMCJ9LHsicm91dGVzLmxpYi9uYW1lIjoiRmF1c3QgU2lnbmFsIFJvdXRpbmcgTGlicmFyeSJ9LHsicm91dGVzLmxpYi92ZXJzaW9uIjoiMC4wIn0seyJzaWduYWxzLmxpYi9uYW1lIjoiRmF1c3QgU2lnbmFsIFJvdXRpbmcgTGlicmFyeSJ9LHsic2lnbmFscy5saWIvdmVyc2lvbiI6IjAuMCJ9XSwidWkiOlt7InR5cGUiOiJ2Z3JvdXAiLCJsYWJlbCI6IkZsYXBweSBGbHV0ZSIsIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiRnJlcXVlbmN5IiwiYWRkcmVzcyI6Ii9GbGFwcHlfRmx1dGUvRnJlcXVlbmN5IiwiaW5kZXgiOiIxMzExODAiLCJtZXRhIjpbeyIxIjoiIn0seyJhY2MiOiIxIDEgLTEwIDAgMTAifSx7InRvb2x0aXAiOiJUb25lIGZyZXF1ZW5jeSJ9LHsidW5pdCI6Ikh6In1dLCJpbml0IjoiNDQwIiwibWluIjoiMjQ3IiwibWF4IjoiMTIwMCIsInN0ZXAiOiIxIn0seyJ0eXBlIjoiaGdyb3VwIiwibGFiZWwiOiJJbnN0cnVtZW50IiwibWV0YSI6W3siMiI6IiJ9XSwiaXRlbXMiOlt7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJWb2x1bWUiLCJhZGRyZXNzIjoiL0ZsYXBweV9GbHV0ZS9JbnN0cnVtZW50L1ZvbHVtZSIsImluZGV4IjoiMTMxMTU2IiwibWV0YSI6W3siMSI6IiJ9LHsiYWNjIjoiMCAxIC0xMiAwIDEyIn0seyJzdHlsZSI6Imtub2IifV0sImluaXQiOiIxIiwibWluIjoiMC43NSIsIm1heCI6IjQiLCJzdGVwIjoiMC4wMSJ9LHsidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IlNwZWVkIChHcmFudWxhdG9yKSIsImFkZHJlc3MiOiIvRmxhcHB5X0ZsdXRlL0luc3RydW1lbnQvU3BlZWRfKEdyYW51bGF0b3IpIiwiaW5kZXgiOiIxMzEyNDgiLCJtZXRhIjpbeyIyIjoiIn0seyJhY2MiOiIwIDEgLTEwIDAgMTAifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjQiLCJtaW4iOiIxIiwibWF4IjoiMTYiLCJzdGVwIjoiMC4wMDAxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUHJvYmFiaWxpdHkgKEdyYW51bGF0b3IpIiwiYWRkcmVzcyI6Ii9GbGFwcHlfRmx1dGUvSW5zdHJ1bWVudC9Qcm9iYWJpbGl0eV8oR3JhbnVsYXRvcikiLCJpbmRleCI6IjEzMTIyMCIsIm1ldGEiOlt7IjMiOiIifSx7ImFjYyI6IjEgMCAtMTAgMCAxMCJ9LHsic3R5bGUiOiJrbm9iIn0seyJ1bml0IjoiJSJ9XSwiaW5pdCI6Ijg4IiwibWluIjoiNjAiLCJtYXgiOiIxMDAiLCJzdGVwIjoiMSJ9XX0seyJ0eXBlIjoiaGdyb3VwIiwibGFiZWwiOiJQYXJhbWV0ZXJzIiwibWV0YSI6W3siMyI6IiJ9XSwiaXRlbXMiOlt7InR5cGUiOiJoc2xpZGVyIiwibGFiZWwiOiJQcmVzc3VyZSIsImFkZHJlc3MiOiIvRmxhcHB5X0ZsdXRlL1BhcmFtZXRlcnMvUHJlc3N1cmUiLCJpbmRleCI6IjEzMTE5MiIsIm1ldGEiOlt7ImFjYyI6IjAgMCAtMTAgMCAxMCJ9LHsic3R5bGUiOiJrbm9iIn1dLCJpbml0IjoiMSIsIm1pbiI6IjAuNiIsIm1heCI6IjEiLCJzdGVwIjoiMC4wMSJ9LHsidHlwZSI6ImhzbGlkZXIiLCJsYWJlbCI6IkJyZWF0aCBOb2lzZSIsImFkZHJlc3MiOiIvRmxhcHB5X0ZsdXRlL1BhcmFtZXRlcnMvQnJlYXRoX05vaXNlIiwiaW5kZXgiOiIxMzE4NTIiLCJtZXRhIjpbeyJhY2MiOiIwIDEgLTEwIDAgMTAifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjAuMDEiLCJtaW4iOiIwLjAxIiwibWF4IjoiMC4yIiwic3RlcCI6IjAuMDEifV19LHsidHlwZSI6Imhncm91cCIsImxhYmVsIjoiUmV2ZXJiZXJhdGlvbiIsIm1ldGEiOlt7IjQiOiIifV0sIml0ZW1zIjpbeyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiRWNobyBJbnRlbnNpdHkiLCJhZGRyZXNzIjoiL0ZsYXBweV9GbHV0ZS9SZXZlcmJlcmF0aW9uL0VjaG9fSW50ZW5zaXR5IiwiaW5kZXgiOiIxOTc1OTIiLCJtZXRhIjpbeyJhY2MiOiIyIDAgLTEwIDEwIDAgMC4wMDEifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjAuMDAxIiwibWluIjoiMC4wMDEiLCJtYXgiOiIwLjY1Iiwic3RlcCI6IjAuMDAxIn0seyJ0eXBlIjoiaHNsaWRlciIsImxhYmVsIjoiUmV2ZXJiZXJhdGlvbiBSb29tIFNpemUgKEluc3RyUmV2ZXJiKSIsImFkZHJlc3MiOiIvRmxhcHB5X0ZsdXRlL1JldmVyYmVyYXRpb24vUmV2ZXJiZXJhdGlvbl9Sb29tX1NpemVfKEluc3RyUmV2ZXJiKSIsImluZGV4IjoiMzIiLCJtZXRhIjpbeyJhY2MiOiIxIDEgLTMwIDAgMTYifSx7InN0eWxlIjoia25vYiJ9XSwiaW5pdCI6IjAuNzIiLCJtaW4iOiIwLjA1IiwibWF4IjoiMiIsInN0ZXAiOiIwLjAxIn1dfV19XX0w"; }

/*
 faust2wasm: GRAME 2017-2018
*/
 
'use strict';

// Monophonic Faust DSP
class FlappyFluteProcessor extends AudioWorkletProcessor {
    
    // JSON parsing functions
    static parse_ui(ui, obj, callback)
    {
        for (var i = 0; i < ui.length; i++) {
            FlappyFluteProcessor.parse_group(ui[i], obj, callback);
        }
    }
    
    static parse_group(group, obj, callback)
    {
        if (group.items) {
            FlappyFluteProcessor.parse_items(group.items, obj, callback);
        }
    }
    
    static parse_items(items, obj, callback)
    {
        for (var i = 0; i < items.length; i++) {
            callback(items[i], obj, callback);
        }
    }
    
    static parse_item1(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            FlappyFluteProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Nothing
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            obj.push({ name: item.address,
                     defaultValue: item.init,
                     minValue: item.min,
                     maxValue: item.max });
        }
    }
    
    static parse_item2(item, obj, callback)
    {
        if (item.type === "vgroup"
            || item.type === "hgroup"
            || item.type === "tgroup") {
            FlappyFluteProcessor.parse_items(item.items, obj, callback);
        } else if (item.type === "hbargraph"
                   || item.type === "vbargraph") {
            // Keep bargraph adresses
            obj.outputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
        } else if (item.type === "vslider"
                   || item.type === "hslider"
                   || item.type === "button"
                   || item.type === "checkbox"
                   || item.type === "nentry") {
            // Keep inputs adresses
            obj.inputs_items.push(item.address);
            obj.pathTable[item.address] = parseInt(item.index);
            if (item.meta !== undefined) {
                for (var i = 0; i < item.meta.length; i++) {
                    if (item.meta[i].midi !== undefined) {
                        if (item.meta[i].midi.trim() === "pitchwheel") {
                            obj.fPitchwheelLabel.push(item.address);
                        } else if (item.meta[i].midi.trim().split(" ")[0] === "ctrl") {
                            obj.fCtrlLabel[parseInt(item.meta[i].midi.trim().split(" ")[1])]
                                .push({ path:item.address,
                                      min:parseFloat(item.min),
                                      max:parseFloat(item.max) });
                        }
                    }
                }
            }
        }
    }
    
    static b64ToUint6(nChr)
    {
        return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
        nChr - 71
        : nChr > 47 && nChr < 58 ?
        nChr + 4
        : nChr === 43 ?
        62
        : nChr === 47 ?
        63
        :
        0;
    }
    
    static atob(sBase64, nBlocksSize)
    {
        if (typeof atob === 'function') {
            return atob(sBase64);
        } else {
            
            var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
            var nInLen = sB64Enc.length;
            var nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2;
            var taBytes = new Uint8Array(nOutLen);
            
            for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
                nMod4 = nInIdx & 3;
                nUint24 |= FlappyFluteProcessor.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
                if (nMod4 === 3 || nInLen - nInIdx === 1) {
                    for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
                    }
                    nUint24 = 0;
                }
            }
            return taBytes.buffer;
        }
    }
    
    static remap(v, mn0, mx0, mn1, mx1)
    {
        return (1.0 * (v - mn0) / (mx0 - mn0)) * (mx1 - mn1) + mn1;
    }
   
    static get parameterDescriptors () 
    {
        // Analyse JSON to generate AudioParam parameters
        var params = [];
        FlappyFluteProcessor.parse_ui(JSON.parse(getJSONFlappyFlute()).ui, params, FlappyFluteProcessor.parse_item1);
        return params;
    }
    
    constructor(options)
    {
        super(options);
      
        this.json_object = JSON.parse(getJSONFlappyFlute());

        this.output_handler = function(path, value) { this.port.postMessage({ path: path, value: value }); };
        
        this.ins = null;
        this.outs = null;

        this.dspInChannnels = [];
        this.dspOutChannnels = [];

        this.fPitchwheelLabel = [];
        this.fCtrlLabel = new Array(128);
        for (var i = 0; i < this.fCtrlLabel.length; i++) { this.fCtrlLabel[i] = []; }

        this.numIn = parseInt(this.json_object.inputs);
        this.numOut = parseInt(this.json_object.outputs);

        // Memory allocator
        this.ptr_size = 4;
        this.sample_size = 4;
        
        this.FlappyFlute_instance = new WebAssembly.Instance(FlappyFluteProcessor.wasm_module, FlappyFluteProcessor.importObject);
  	   	this.factory = this.FlappyFlute_instance.exports;
        this.HEAP = this.FlappyFlute_instance.exports.memory.buffer;
        this.HEAP32 = new Int32Array(this.HEAP);
        this.HEAPF32 = new Float32Array(this.HEAP);

        console.log(this.HEAP);
        console.log(this.HEAP32);
        console.log(this.HEAPF32);

        // bargraph
        this.outputs_timer = 5;
        this.outputs_items = [];

        // input items
        this.inputs_items = [];

        // Start of HEAP index

        // DSP is placed first with index 0. Audio buffer start at the end of DSP.
        this.audio_heap_ptr = parseInt(this.json_object.size);

        // Setup pointers offset
        this.audio_heap_ptr_inputs = this.audio_heap_ptr;
        this.audio_heap_ptr_outputs = this.audio_heap_ptr_inputs + (this.numIn * this.ptr_size);

        // Setup buffer offset
        this.audio_heap_inputs = this.audio_heap_ptr_outputs + (this.numOut * this.ptr_size);
        this.audio_heap_outputs = this.audio_heap_inputs + (this.numIn * FlappyFluteProcessor.buffer_size * this.sample_size);

        // Start of DSP memory : DSP is placed first with index 0
        this.dsp = 0;

        this.pathTable = [];

        // Send output values to the AudioNode
        this.update_outputs = function ()
        {
            if (this.outputs_items.length > 0 && this.output_handler && this.outputs_timer-- === 0) {
                this.outputs_timer = 5;
                for (var i = 0; i < this.outputs_items.length; i++) {
                    this.output_handler(this.outputs_items[i], this.HEAPF32[this.pathTable[this.outputs_items[i]] >> 2]);
                }
            }
        }
        
        this.initAux = function ()
        {
            var i;
            
            if (this.numIn > 0) {
                this.ins = this.audio_heap_ptr_inputs;
                for (i = 0; i < this.numIn; i++) {
                    this.HEAP32[(this.ins >> 2) + i] = this.audio_heap_inputs + ((FlappyFluteProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Ins buffer tables
                var dspInChans = this.HEAP32.subarray(this.ins >> 2, (this.ins + this.numIn * this.ptr_size) >> 2);
                for (i = 0; i < this.numIn; i++) {
                    this.dspInChannnels[i] = this.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + FlappyFluteProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            if (this.numOut > 0) {
                this.outs = this.audio_heap_ptr_outputs;
                for (i = 0; i < this.numOut; i++) {
                    this.HEAP32[(this.outs >> 2) + i] = this.audio_heap_outputs + ((FlappyFluteProcessor.buffer_size * this.sample_size) * i);
                }
                
                // Prepare Out buffer tables
                var dspOutChans = this.HEAP32.subarray(this.outs >> 2, (this.outs + this.numOut * this.ptr_size) >> 2);
                for (i = 0; i < this.numOut; i++) {
                    this.dspOutChannnels[i] = this.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + FlappyFluteProcessor.buffer_size * this.sample_size) >> 2);
                }
            }
            
            // Parse UI
            FlappyFluteProcessor.parse_ui(this.json_object.ui, this, FlappyFluteProcessor.parse_item2);
            
            // Init DSP
            this.factory.init(this.dsp, sampleRate); // 'sampleRate' is defined in AudioWorkletGlobalScope  
        }

        this.ctrlChange = function (channel, ctrl, value)
        {
            if (this.fCtrlLabel[ctrl] !== []) {
                for (var i = 0; i < this.fCtrlLabel[ctrl].length; i++) {
                    var path = this.fCtrlLabel[ctrl][i].path;
                    this.setParamValue(path, FlappyFluteProcessor.remap(value, 0, 127, this.fCtrlLabel[ctrl][i].min, this.fCtrlLabel[ctrl][i].max));
                    if (this.output_handler) {
                   		this.output_handler(path, this.getParamValue(path));
                   	}
                }
            }
        }

        this.pitchWheel = function (channel, wheel)
        {
            for (var i = 0; i < this.fPitchwheelLabel.length; i++) {
                var path = this.fPitchwheelLabel[i];
                this.setParamValue(path, Math.pow(2.0, wheel/12.0));
                if (this.output_handler) {
                   	this.output_handler(path, this.getParamValue(path));
                }
            }
        }

        this.setParamValue = function (path, val)
        {
            this.HEAPF32[this.pathTable[path]] = val;
        }

        this.getParamValue = function (path)
        {
            return this.HEAPF32[this.pathTable[path]];
        }

        // Init resulting DSP
        this.initAux();

        // Set message handler
        this.port.onmessage = this.handleMessage.bind(this);
    }
    
    handleMessage(event) 
    {
        var msg = event.data;
        switch (msg.type) {
            // Generic MIDI message
            case "midi": this.midiMessage(msg.data); break;
            // Typed MIDI message
            case "keyOn": this.keyOn(msg.data[0], msg.data[1], msg.data[2]); break;
            case "keyOff": this.keyOff(msg.data[0], msg.data[1], msg.data[2]); break;
            case "ctrlChange": this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]); break;
            case "pitchWheel": this.pitchWheel(msg.data[0], msg.data[1]); break;
            // Generic data message
            case "param": this.setParamValue(msg.key, msg.value); break;
            //case "patch": this.onpatch(msg.data); break;
        }
    }
    
    midiMessage(data)
    {
        var cmd = data[0] >> 4;
        var channel = data[0] & 0xf;
        var data1 = data[1];
        var data2 = data[2];
        
        if (channel === 9) {
            return;
        } else if (cmd === 8 || ((cmd === 9) && (data2 === 0))) {
            //this.keyOff(channel, data1, data2);
        } else if (cmd === 9) {
            //this.keyOn(channel, data1, data2);
        } else if (cmd === 11) {
            //this.ctrlChange(channel, data1, data2);
        } else if (cmd === 14) {
            //this.pitchWheel(channel, ((data2 * 128.0 + data1)-8192)/8192.0);
        }
    }
    
    process(inputs, outputs, parameters) 
    {
        var input = inputs[0];
        var output = outputs[0];
        
        // Copy inputs
        if (input !== undefined) {
            for (var chan = 0; chan < Math.min(this.numIn, input.length) ; ++chan) {
                var dspInput = this.dspInChannnels[chan];
                dspInput.set(input[chan]);
            }
        }
        
        // Update controls (possibly needed for sample accurate control)
        var params = Object.entries(parameters);
        for (var i = 0; i < params.length; i++) {
            this.HEAPF32[this.pathTable[params[i][0]] >> 2] = params[i][1][0];
        }
        
        // Compute
        this.factory.compute(this.dsp, FlappyFluteProcessor.buffer_size, this.ins, this.outs);
        
        // Update bargraph
        this.update_outputs();
        
        // Copy outputs
        if (output !== undefined) {
            //console.log("output.length " + output.length);
            for (var chan = 0; chan < Math.min(this.numOut, output.length); ++chan) {
                var dspOutput = this.dspOutChannnels[chan];
                output[chan].set(dspOutput);
            }
        }
        
        return true;
    }
}

// Globals

FlappyFluteProcessor.buffer_size = 128;

FlappyFluteProcessor.importObject = {
    env: {
        memoryBase: 0,
        tableBase: 0,
            
        // Integer version
        _abs: Math.abs,
        
        // Float version
        _acosf: Math.acos,
        _asinf: Math.asin,
        _atanf: Math.atan,
        _atan2f: Math.atan2,
        _ceilf: Math.ceil,
        _cosf: Math.cos,
        _expf: Math.exp,
        _floorf: Math.floor,
        _fmodf: function(x, y) { return x % y; },
        _logf: Math.log,
        _log10f: Math.log10,
        _max_f: Math.max,
        _min_f: Math.min,
        _remainderf: function(x, y) { return x - Math.round(x/y) * y; },
        _powf: Math.pow,
        _roundf: Math.fround,
        _sinf: Math.sin,
        _sqrtf: Math.sqrt,
        _tanf: Math.tan,
           
        // Double version
        _acos: Math.acos,
        _asin: Math.asin,
        _atan: Math.atan,
        _atan2: Math.atan2,
        _ceil: Math.ceil,
        _cos: Math.cos,
        _exp: Math.exp,
        _floor: Math.floor,
        _fmod: function(x, y) { return x % y; },
        _log: Math.log,
        _log10: Math.log10,
        _max_: Math.max,
        _min_: Math.min,
        _remainder:function(x, y) { return x - Math.round(x/y) * y; },
        _pow: Math.pow,
        _round: Math.fround,
        _sin: Math.sin,
        _sqrt: Math.sqrt,
        _tan: Math.tan,
        
        table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })
    }
};

// Synchronously compile and instantiate the WASM module
try {
    if (FlappyFluteProcessor.wasm_module == undefined) {
        FlappyFluteProcessor.wasm_module = new WebAssembly.Module(FlappyFluteProcessor.atob(getBase64CodeFlappyFlute()));
        registerProcessor('FlappyFlute', FlappyFluteProcessor);
    }
} catch (e) {
    console.log(e); console.log("Faust FlappyFlute cannot be loaded or compiled");
}

